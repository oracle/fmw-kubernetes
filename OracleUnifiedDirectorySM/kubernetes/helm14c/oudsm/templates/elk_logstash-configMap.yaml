#
# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl
#
#
{{- if and .Values.elk.IntegrationEnabled (not .Values.elk.logstashConfigMap) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "oudsm.fullname" . }}-logstash-configmap
data:
  logstash.yml: |
    #http.host: "0.0.0.0"
  elk.crt: |-
{{ .Files.Get "certs/elk.crt" | indent 4}}
  logstash-config.conf: | 
    input {
      file {
        path => "/u01/oracle/user_projects/domains/oudsmdomain-1/servers/AdminServer/logs/*.log"
        type => "setup-logs"
        start_position => beginning
        sincedb_path => "/dev/null"
      }
          }
    filter {
      if [type] == "setup-logs" {
        grok {
          match => [ "message", "<%{DATA:log_timestamp}> <%{WORD:log_level}> <%{WORD:thread}> <%{HOSTNAME:hostname}> <%{HOSTNAME:hostserver}> %{GREEDYDATA:message}" ]
          }
        }

      if "_grokparsefailure" in [tags] {
        mutate {
          remove_tag => [ "_grokparsefailure" ]
          }
        }
      }
     output {
        elasticsearch {
          hosts => ["{{ .Values.elk.eshosts }}"]
          cacert => '/usr/share/logstash/config/certs/elk.crt'
          index => "{{ .Values.elk.esindex }}"
          ssl => {{ .Values.elk.sslenabled }}
          ssl_certificate_verification => false
          {{- if .Values.elk.espassword }}
          user => "{{ .Values.elk.esuser }}"
          password => "${ELASTICSEARCH_PASSWORD}"
          {{- end }}
          {{- if .Values.elk.esapikey }}
          api_key => "${ELASTICSEARCH_PASSWORD}"
          {{- end }}
        }
      }
{{- end -}}
