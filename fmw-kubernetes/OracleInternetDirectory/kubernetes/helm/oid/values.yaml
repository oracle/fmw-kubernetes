#
# Copyright (c) 2021, Oracle and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at 
# https://oss.oracle.com/licenses/upl
#
# Default values for oid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of OID instances/pods/services to be created
replicaCount: 1

restartPolicyName: OnFailure

image:
  repository: oracle/oid
  tag: 12.2.1.4.0
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: regcred

nameOverride: ""

fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # Type of Service to be created for OID Interfaces (like LDAP, HTTP, Admin)
  type: ClusterIP
  # Service Type for loadbalancer services exposing LDAP, HTTP interfaces from available/accessible OID pods.
  lbrtype: ClusterIP

ingress:
  enabled: true
  # Supported values: nginx or voyager
  type: nginx
  # Configuration for Ingress rules about HTTP/HTTPS interfaces
  http:
    nginxAnnotations: 
      kubernetes.io/ingress.class: "nginx"
      # Server-side HTTPS enforcement through redirect - for specific ingress resources
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      # Required to be set if backendPort is configured as https
      #nginx.ingress.kubernetes.io/backend-protocol: "https"
    nginxAnnotationsTLS: 
      kubernetes.io/ingress.class: "nginx"
      # Server-side HTTPS enforcement through redirect - for specific ingress resources
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      # Required to be set if backendPort is configured as https
      #nginx.ingress.kubernetes.io/backend-protocol: "https"
      # For Forcing TLS/HTTPS
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ingress.allow-http: "false"
      #nginx.ingress.kubernetes.io/x-forwarded-proto: "https"
      #nginx.ingress.kubernetes.io/x-forwarded-port: "https"
    # Backend Port to be used. Either http or https
    backendPort: http
  # Configuration for Ingress rules about Admin HTTPS interface
  admin:
    nginxAnnotations:
      kubernetes.io/ingress.class: "nginx"
      # Backend Port is always HTTPS only
      nginx.ingress.kubernetes.io/affinity-mode: "persistent"
      nginx.ingress.kubernetes.io/affinity: "cookie"
      # Server-side HTTPS enforcement through redirect - for specific ingress resources
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginxAnnotationsTLS:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/affinity-mode: "persistent"
      nginx.ingress.kubernetes.io/affinity: "cookie"
      # Backend Port is always HTTPS only
      #nginx.ingress.kubernetes.io/backend-protocol: "https"
      # For Forcing TLS/HTTPS
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ingress.allow-http: "false"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_clear_input_headers "WL-Proxy-Client-IP" "WL-Proxy-SSL";
        more_set_input_headers "X-Forwarded-Proto: https";
        more_set_input_headers "WL-Proxy-SSL: true";
      #nginx.ingress.kubernetes.io/x-forwarded-proto: "https"
      #nginx.ingress.kubernetes.io/x-forwarded-port: "https"
    # Hostname to be used with Ingress Rules.
  # SSL/TLS configuration for the Ingress
  # Flag to decide whether to force TLS/HTTPS or not
  tlsEnabled: true
  # Secret name to use an already created TLS Secret. If such secret is not provided, one would be created with name <fullname>-tls-cert
  # If the TLS Secret is in different namespace, name can be mentioned as <namespace>/<tlsSecretName>
  tlsSecret:
  # Parameters for generation of SelfSigned Cert
  # Subject's common name (cn) for SelfSigned Cert. Default Value <fullname>
  certCN:
  # Validity of Self-Signed Cert in days
  certValidityDays: 365
  # Voyager specific configuration
  voyagerAnnotations:
    kubernetes.io/ingress.class: "voyager"
    ingress.appscode.com/type: "NodePort"
    # To ensure that HAProxy matches against the NodePort
    #ingress.appscode.com/use-node-port: "true"
    # Yet to explore
    #ingress.appscode.com/stats: "true"
  voyagerAnnotationsTLS:
    kubernetes.io/ingress.class: "voyager"
    ingress.appscode.com/type: "NodePort"
    # To ensure that HAProxy matches against the NodePort
    #ingress.appscode.com/use-node-port: "true"
    # Yet to explore
    #ingress.appscode.com/stats: "true"
  voyagerNodePortHttp: 30080
  voyagerNodePortHttps: 30443
  voyagerHttpPort: 80
  voyagerHttpsPort: 443
  voyagerExternalIPs:
#  - a.b.c.d
  voyagerTcpPortPrefix:
    ldap: 3060
    ldaps: 3131
nodeSelector: {}

tolerations: []

affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - oid
# Configuration for Persistent Volume and Persistent Volume Claim for user_projects
# PV/PVC associated with this configuration would be mounted inside containers at /u01/oracle/user_projects
persistence:
  # If enabled, it will use the persistent volume. If value is false, PV and PVC would not be used and pods would be using the default emptyDir mount volume
  enabled: true
  # Provide the pvname to use an already created Persistent Volume. If blank, will use the default name from Chart
  pvname: 
  # Provide the pvcname to use an already created Persistent Volume Claim. If blank, will use default name from Chart
  pvcname: 
  accessMode: ReadWriteMany
  size: 20Gi
  storageClass: manual
  reclaimPolicy: "Delete"
# default supported values: either filesystem or networkstorage or custom
  type: filesystem
  networkstorage:
    nfs:
      path: /scratch/shared/oid_user_projects
      server: 0.0.0.0
  filesystem:
    hostPath:
      # The path location mentioned should be created and made accessible with necessary privileges for access from pods/containers. 
      path: /scratch/shared/oid_user_projects
  custom:
    # YAML content to be included in PersistenceVolume Object
  annotations: {}

secret:
  # If enabled it will use the secret created with base64 encoding. if value is false, secret would not be used and input values (through --set, --values, etc.) would be used while creation of pods.
  enabled: true
  # provided the secret name to use an already created Secret
  name:
  type: opaque

# Ports to be configured in each OID instance/pod. Ideally, it would not be required to change these ports.
oidPorts:
  ldaps: 3131
  ldap: 3060

# Generic configuration parameters for OID Instances
oidConfig:
  # BaseDN for OID Instances
  realmDN:

  # Weblogic Domain Name and Home
  domainName: oid_domain
  domainHome: /u01/oracle/user_projects/domains/oid_domain

  # Password for orcladmin user.
  # Value would be added to Secret and Pod(s) would be using the Secret
  orcladminPassword:
  
  # Value for login into db usually sys
  # Value would be added to Secret and Pod(s) would be using the Secret
  dbUser:

  # dbPassword is the SYS password for the database
  # Value would be added to Secret and Pod(s) would be using the Secret
  dbPassword:

  # Password for DB Schema(s) to be created by RCU.
  # Value would be added to Secret and Pod(s) would be using the Secret
  dbschemaPassword:

  # The schema prefix to use in the database, for example `OIDPD`.
  rcuSchemaPrefix:

  # The database URL. Sample: <db_host.domain>:<db_port>/<service_name>
  rcuDatabaseURL:

  # Based on the value for this parameter, initialization/configuration of each OID additional servers 
  # (oid)n would be delayed and
  # readiness probes would be configured.
  # This it to  make sure that OID additional servers (oid)n are initialized in sequence. 
  sleepBeforeConfig: 600

  # SSL enabled password to be used for ORAPKI
  sslwalletPassword:

# Configuration Parameters related to deployment of OID instances on Kubernetes Cluster
deploymentConfig:
  # Based on the value for this parameter, initialization/configuration of each OID additional servers (oid)n
  # will be delayed and readiness probes would be configured.
  # initialDelaySeconds would be configured as sleepBeforeConfig + startupTime
  startupTime: 480
  # Paramter to decide livenessProbe initialDelaySeconds
  adminProbeInitialDelay: 600
  livenessProbeInitialDelay: 1200

# Configuration for Base OID instance (oid1)
baseOID:
  # Reference to ConfigMap which can contain additional environment variables to be passed on to POD for Base OID Instance
  envVarsConfigMap:
  # Environment variables in Yaml Map format. This is helpful when its requried to pass environment variables through --values file
  # List of env variables which would not be honored from envVars map is same as list of env var names mentioned for envVarsConfigMap
  envVars:

# Configuration for additional OID instances (oidN)
additionalOID:
  #Reference to ConfigMap which can contain additional environment variables to be passed on to POD for Base OID Instance
  envVarsConfigMap:
  # List of env variables which would not be honored from envVars map is same as list of env var names mentioned for envVarsConfigMap
  envVars:

# Parameters/Configurations for ODSM Deployment
odsm:
  # Weblogic Administration User
  adminUser:
  # Password for Weblogic Administration User
  adminPassword:
  # Expected startup time. After specified seconds readinessProbe would start
  startupTime: 900
  weblogicPluginEnabled: "true"

# Configuration for ODSM Ports
odsmPorts:
  http: 7001
  https: 7002
