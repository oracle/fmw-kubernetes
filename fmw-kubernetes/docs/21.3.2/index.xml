<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle Fusion Middleware on Kubernetes</title>
    <link>/fmw-kubernetes/21.3.2/</link>
    <description>Recent content on Oracle Fusion Middleware on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2019 06:46:23 -0500</lastBuildDate>
    
	<atom:link href="/fmw-kubernetes/21.3.2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Patch a Oracle WebCenter Sites product Docker image</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/patch-and-upgrade/patch-an-image/patch-wcsites-product-image/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/patch-and-upgrade/patch-an-image/patch-wcsites-product-image/</guid>
      <description>These instructions describe how to upgrade a new release of Oracle WebCenter Sites product Docker image in a running Oracle WebCenter Sites Kubernetes environment. A rolling upgrade approach is used to upgrade managed server pods of the domain.
It is expecting a Zero down time as a rolling upgrade approach is used.
 Prerequisites  Make sure Oracle WebCenter Sites domain is created and all the admin and managed pods are up and running.</description>
    </item>
    
    <item>
      <title>Preparing an OKE environment</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/oke/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/oke/</guid>
      <description>Overview Create Public SSH Key to access all the Bastion/Worker nodes  Create SSH key using ssh-keygen on linux terminal.  Generating public/private rsa key pair. Your identification has been saved in &amp;lt;path&amp;gt;/id_rsa. Your public key has been saved in &amp;lt;path&amp;gt;/id_rsa.pub. The key fingerprint is: SHA256:xCi1gf1QFafbRwOM3WjUTgqEInwi6UklbuxbBeMzA6M demokey The key&amp;#39;s randomart image is: +---[RSA 2048]----+ | +++oo..++*++ | | ++==+==. oo=.+ | |Eo+o*+++o .o +o | | oo * .. o.... | | .</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/release-notes/</link>
      <pubDate>Fri, 15 Mar 2019 11:25:28 -0400</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle SOA Suite on Kubernetes.
Recent changes    Date Version Change     August 6, 2021 21.3.2 Supports Oracle SOA Suite 12.2.1.4 domains deployment using July 2021 PSU and known bug fixes. Oracle SOA Suite 12.2.1.4 Docker image for this release can be downloaded from My Oracle Support (MOS patch 33125465).   May 31, 2021 21.2.2 Supports Oracle SOA Suite 12.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/release-notes/</link>
      <pubDate>Fri, 15 Mar 2019 11:25:28 -0400</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle WebCenter Sites on Kubernetes.
Recent changes    Date Version Introduces backward incompatibilities Change     Jan 15, 2021 21.1.1 no Certified Oracle WebLogic Kubernetes Operator version 3.0.1. Kubernetes 1.14.8+, 1.15.7+, 1.1.6.0+, 1.17.0+, and 1.18.0+ support. Flannel is the only supported CNI in this release. Only Webcenter Sites 12.2.1.4 is supported.    Known issues    Issue Description     Publishing via LoadBalancer Endpoint Currenly publishing is only supported via NodePort as described in section For Publishing Setting in WebCenter Sites on page.</description>
    </item>
    
    <item>
      <title>Deploy using JDeveloper</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/deploying-composites/supportjdev/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/deploying-composites/supportjdev/</guid>
      <description>Learn how to deploy Oracle SOA Suite and Oracle Service Bus composite applications from Oracle JDeveloper (running outside the Kubernetes network) to an Oracle SOA Suite instance in the WebLogic Kubernetes Operator environment.
Use JDeveloper for development and test environments only. For a production environment, you should deploy using Application Control and WLST methods.
 Deploy Oracle SOA Suite and Oracle Service Bus composite applications to Oracle SOA Suite from JDeveloper To deploy Oracle SOA Suite and Oracle Service Bus composite applications from Oracle JDeveloper, the Administration Server must be configured to expose a T3 channel.</description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/appendix/soa-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/appendix/soa-cluster-sizing-info/</guid>
      <description>Oracle SOA cluster sizing recommendations    Oracle SOA Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Number of Managed Servers 2 2 4   Configurations per Managed Server No of CPU core(s) : 2, Memory : 16GB No of CPU core(s) : 4, Memory : 16GB No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/appendix/wcsites-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/appendix/wcsites-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Sites cluster sizing recommendations    Oracle WebCenter Sites Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Managed Server No of Servers : 2, No of CPU core(s) : 2, Memory : 16GB No of Servers : 2, No of CPU core(s) : 4, Memory : 16GB No of Servers : 3, No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Patch an image</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/patch_and_upgrade/patch-an-image/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/patch_and_upgrade/patch-an-image/</guid>
      <description>Oracle releases Oracle SOA Suite images regularly with the latest bundle and recommended interim patches in My Oracle Support (MOS). However, if you need to create images with new bundle and interim patches, you can build these images using the WebLogic Image Tool.
If you have access to the Oracle SOA Suite patches, you can patch an existing Oracle SOA Suite image with a bundle patch and interim patches. Oracle recommends that you use the WebLogic Image Tool to patch the Oracle SOA Suite image.</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) to load balance Oracle SOA Suite domain clusters. You can configure Traefik for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
 Install the Traefik (ingress-based) load balancer Create an Ingress for the domain Verify domain application URL access Uninstall the Traefik ingress Uninstall Traefik  Install the Traefik (ingress-based) load balancer   Use Helm to install the Traefik (ingress-based) load balancer.</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) to load balance Oracle WebCenter Sites domain clusters. You can configure Traefik for access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Sites domain in a Kubernetes cluster:
Setting Up Loadbalancer Traefik for the WebCenter Sites Domain on K8S Follow these steps to set up Traefik as a loadbalancer for the Oracle WebCenter Sites domain:</description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle SOA Suite domain deployment in a Kubernetes cluster (on-premise environments) with the WebLogic Kubernetes Operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements The Linux kernel supported for deploying and running Oracle SOA Suite domains with the operator is Oracle Linux 7 (UL6+) and Red Hat Enterprise Linux 7 (UL3+ only with standalone Kubernetes).</description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Sites domain deployment in a Kubernetes cluster (on-premise environments) with the Oracle WebLogic Server Kubernetes operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements Supported Linux kernel for deploying and running Oracle WebCenter Sites domains with the operator is Oracle Linux 7 UL6+ and Red Hat Enterprise Linux 7 (UL3+).</description>
    </item>
    
    <item>
      <title>Preparing the Bastion host</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/bastion/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/bastion/</guid>
      <description>STEP 1 : Create Public Security List Create Public Security List (bastion_public_sec_list) in same VCN as that of OKE Cluster for Bastion Node
 Ingress Rules as: (where 10.0.22.0/24 is the CIDR planned to be used for bastion subnet)  Egress as:   STEP 2 : Create Private Security List Create Private Security List (bastion_private_sec_list) in same VCN as that of OKE Cluster which will be added into Worker Node subnet.</description>
    </item>
    
    <item>
      <title>Deploy using Maven and Ant</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/deploying-composites/deploy-using-maven-ant/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/deploying-composites/deploy-using-maven-ant/</guid>
      <description>Learn how to deploy Oracle SOA Suite and Oracle Service Bus composite applications using the Maven and Ant based approach in an Oracle SOA Suite in WebLogic Kubernetes Operator environment.
Before deploying composite applications, we need to create a Kubernetes pod in the same cluster where the Oracle SOA Suite domain is running, so that composite applications can be deployed using the internal Kubernetes Service for the Administration Server URL.</description>
    </item>
    
    <item>
      <title>Enable additional URL access</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/enable-additional-url-access/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/enable-additional-url-access/</guid>
      <description>This section provides information about how to extend an existing ingress (Non-SSL and SSL termination) to enable additional application URL access for Oracle SOA Suite domains.
The ingress per domain created in the steps in Set up a load balancer exposes the application paths defined in template YAML files present at ${WORKDIR}/charts/ingress-per-domain/templates/.
To extend an existing ingress with additional application URL access:
  Update the template YAML file at ${WORKDIR}/charts/ingress-per-domain/templates/ to define additional path rules.</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle SOA Suite domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
See the official installation document for prerequisites.
 Install the NGINX load balancer for non-SSL and SSL termination configuration Generate secret for SSL access Install NGINX load balancer for end-to-end SSL configuration Configure NGINX to manage ingresses Verify domain application URL access Uninstall NGINX ingress Uninstall NGINX  To get repository information, enter the following Helm commands:</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle WebCenter Sites domain clusters. You can configure NGINX for access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Sites domain in a Kubernetes cluster:
See the official installation document for prerequisites.
Add the Helm repos (if not added) Add following Helm repos</description>
    </item>
    
    <item>
      <title>Upgrade an operator release</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/patch_and_upgrade/upgrade-operator-release/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/patch_and_upgrade/upgrade-operator-release/</guid>
      <description>These instructions apply to upgrading operators within the 3.x release family as additional versions are released.
To upgrade the Kubernetes operator, use the helm upgrade command. Make sure that the weblogic-kubernetes-operator repository on your local machine is at the operator release to which you are upgrading. See the steps here to pull the image and set up the weblogic-kubernetes-operator repository. When upgrading the operator, the helm upgrade command requires that you supply a new Helm chart and image.</description>
    </item>
    
    <item>
      <title>Upgrade an operator release</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/patch-and-upgrade/upgrade-operator-release/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/patch-and-upgrade/upgrade-operator-release/</guid>
      <description>These instructions apply to upgrading operators within the 3.x release family as additional versions are released.
To upgrade the Kubernetes operator, use the helm upgrade command. When upgrading the operator, the helm upgrade command requires that you supply a new Helm chart and image. For example:
$ helm upgrade \ --reuse-values \ --set image=oracle/weblogic-kubernetes-operator:3.0.2 \ --namespace weblogic-operator-namespace \ --wait \ weblogic-operator \ kubernetes/charts/weblogic-operator </description>
    </item>
    
    <item>
      <title>Preparing a file system</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/filesystem/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/filesystem/</guid>
      <description>Create Filesystem and security list for FSS Note: Make sure you create the filesystem and security list in the OKE created VCN
 Login to OCI Console and go to File Storage and Click &amp;ldquo;File System&amp;rdquo;  Click &amp;ldquo;Create File System&amp;rdquo;  You can create File System and Mount Targets with the default values. But in case you want to rename the file System and mount targets, follow below steps. Note: Make Sure the Virtual Cloud Network in Mount Target refers to the one where your instances are created and you will be accessing this file system.</description>
    </item>
    
    <item>
      <title>Configure SSL certificates</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configuring-custom-ssl-certificates/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configuring-custom-ssl-certificates/</guid>
      <description>Secure Socket Layer (SSL) provides a secured communication for data sent over unsecured networks. In an SSL termination scenario, you can configure SSL between the client browser and the load balancer in your Oracle SOA Suite instance to ensure that applications are accessed securely. In an SSL end-to-end scenario, an Oracle SOA Suite domain is configured to use a self-signed SSL certificate that was generated during domain creation. Clients will typically receive a message indicating that the signing CA for the certificate is unknown and not trusted.</description>
    </item>
    
    <item>
      <title>Monitor a domain and publish logs</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/monitoring-wcsites-domains/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/monitoring-wcsites-domains/</guid>
      <description>After the Oracle WebCenter Sites domain is set up, you can:
 Monitor the Oracle WebCenter Sites instance using Prometheus and Grafana Publish WebLogic Server logs into Elasticsearch  Monitor the Oracle WebCenter Sites instance using Prometheus and Grafana Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle WebCenter Sites instance and monitor them using Prometheus and Grafana.
Prerequisites This document assumes that the Prometheus Operator is deployed on the Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/patch_and_upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/patch_and_upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle SOA Suite domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/patch-and-upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/patch-and-upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle WebCenter Sites domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Voyager</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/voyager/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/voyager/</guid>
      <description>Voyager/HAProxy is a popular ingress-based load balancer for production environments. This section provides information about how to install and configure Voyager/HAProxy to load balance Oracle SOA Suite domain clusters. You can configure Voyager for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up Voyager as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
 Install the Voyager load balancer Configure Voyager to manage ingresses Verify domain application URL access Uninstalling Voyager Ingress Uninstall Voyager  Install the Voyager load balancer   Add the AppsCode chart repository:</description>
    </item>
    
    <item>
      <title>Voyager</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/configure-load-balancer/voyager/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/configure-load-balancer/voyager/</guid>
      <description>Voyager/HAProxy is a popular ingress-based load balancer for production environments. This section provides information about how to install and configure Voyager/HAProxy to load balance Oracle WebCenter Sites domain clusters. You can configure Voyager for access of the application URL.
Follow these steps to set up Voyager as a load balancer for an Oracle WebCenter Sites domain in a Kubernetes cluster:
 Install the Voyager Load Balancer Configure Voyager to Manage Ingresses Verify that You can Access the Domain URL  Install the Voyager Load Balancer See the official installation document and follow step 1 and 2 here.</description>
    </item>
    
    <item>
      <title>Creating an OCIR</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/ocir/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/oracle-cloud/ocir/</guid>
      <description>Creation of OCIR Push all the required images to OCIR and use from OCIR. Follow the below steps before pushing the images to OCIR
Create an &amp;ldquo;Auth token&amp;rdquo; Create an &amp;ldquo;Auth token&amp;rdquo; which will be used as docker password to push/pull images from OCIR Login to Console and navigate to User Settings, which is in the drop down under your OCI username in the top nav  On User Details page, select &amp;ldquo;Auth Tokens&amp;rdquo; in the left nav and then Click the &amp;ldquo;Generate Token&amp;rdquo; button: Enter a Name and Click &amp;ldquo;Generate Token&amp;rdquo;  Token will get generated  Copy the generated token.</description>
    </item>
    
    <item>
      <title>Apache web tier</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/apache/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/configure-load-balancer/apache/</guid>
      <description>This section provides information about how to install and configure the Apache web tier to load balance Oracle SOA Suite domain clusters. You can configure Apache web tier for non-SSL and SSL termination access of the application URL.
Follow these steps to set up the Apache web tier as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
 Build the Apache web tier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache web tier Helm chart Verify domain application URL access Uninstall Apache web tier  Build the Apache web tier image Refer to the sample, to build the Apache web tier Docker image.</description>
    </item>
    
    <item>
      <title>Elasticsearch integration for logs</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/elasticsearch-integration/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/elasticsearch-integration/</guid>
      <description>1. Integrate Elasticsearch to WebLogic Kubernetes Operator For reference information, see Elasticsearch integration for the WebLogic Kubernetes Operator.
To enable elasticsearch integration, you must edit file kubernetes/charts/weblogic-operator/values.yaml before deploying the WebLogic Kubernetes Operator.
# elkIntegrationEnabled specifies whether or not ELK integration is enabled. elkIntegrationEnabled: true # logStashImage specifies the Docker image containing logstash. # This parameter is ignored if &#39;elkIntegrationEnabled&#39; is false. logStashImage: &amp;quot;logstash:6.6.0&amp;quot; # elasticSearchHost specifies the hostname of where Elasticsearch is running.</description>
    </item>
    
    <item>
      <title>Monitor a domain and publish logs</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/monitoring-soa-domains/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/monitoring-soa-domains/</guid>
      <description>After the Oracle SOA Suite domain is set up, you can:
 Monitor the Oracle SOA Suite instance using Prometheus and Grafana Publish WebLogic Server logs into Elasticsearch Publish SOA server diagnostics logs into Elasticsearch  Monitor the Oracle SOA Suite instance using Prometheus and Grafana Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle SOA Suite instance and monitor them using Prometheus and Grafana.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/weblogic-logging-exporter-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/adminguide/weblogic-logging-exporter-setup/</guid>
      <description>The WebLogic Logging Exporter adds a log event handler to WebLogic Server. WebLogic Server logs can be pushed to Elasticsearch in Kubernetes directly by using the Elasticsearch REST API. For more details, see to the WebLogic Logging Exporter project.
This sample shows you how to publish WebLogic Server logs to Elasticsearch and view them in Kibana. For publishing operator logs, see this sample.
Prerequisites This document assumes that you have already set up Elasticsearch and Kibana for logs collection.</description>
    </item>
    
    <item>
      <title>Expose the T3/T3S protocol</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/enablingt3/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/enablingt3/</guid>
      <description>Oracle strongly recommends that you do not expose non-HTTPS traffic (T3/T3s/LDAP/IIOP/IIOPs) outside of the external firewall. You can control this access using a combination of network channels and firewalls.
 You can create T3/T3S channels and the corresponding Kubernetes service to expose the T3/T3S protocol for the Administration Server and Managed Servers in an Oracle SOA Suite domain.
The WebLogic Kubernetes Operator provides an option to expose a T3 channel for the Administration Server using the exposeAdminT3Channel setting during domain creation, then the matching T3 service can be used to connect.</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle WebCenter Sites domain setup.
Stop all Administration and Managed server pods First stop the all pods related to a domain. This can be done by patching domain &amp;ldquo;serverStartPolicy&amp;rdquo; to &amp;ldquo;NEVER&amp;rdquo;. Here is the sample command for the same.
$ kubectl patch domain wcsites-domain-name -n wcsites-namespace --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; For example:
$ kubectl patch domain wcsitesinfra -n wcsites-ns --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; Drop the RCU schemas $ cd work-dir-name/weblogic-kubernetes-operator $ kubectl apply -f kubernetes/samples/scripts/create-wcsites-domain/output/weblogic-domains/wcsitesinfra/delete-domain-job.</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle SOA Suite domain setup.
Remove the domain   Remove the domain&amp;rsquo;s ingress (for example, Traefik ingress) using Helm:
$ helm uninstall soa-domain-ingress -n sample-domain1-ns For example:
$ helm uninstall soainfra-traefik -n soans   Remove the domain resources by using the sample delete-weblogic-domain-resources.sh script present at ${WORKDIR}/delete-domain:
$ cd ${WORKDIR}/delete-domain $ ./delete-weblogic-domain-resources.sh -d sample-domain1 For example:
$ cd ${WORKDIR}/delete-domain $ ./delete-weblogic-domain-resources.sh -d soainfra   Use kubectl to confirm that the server pods and domain resource are deleted:</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/faq/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/faq/</guid>
      <description>Overriding tuning parameters is not supported using configuration overrides The WebLogic Kubernetes Operator enables you to override some of the domain configuration using configuration overrides (also called situational configuration). See supported overrides. Overriding the tuning parameters such as MaxMessageSize and PAYLOAD, for Oracle SOA Suite domains is not supported using the configuration overrides feature. However, you can override them using the following steps:
  Specify the new value using the environment variable K8S_REFCONF_OVERRIDES in serverPod.</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/fmw-kubernetes/21.3.2/wcsites-domains/faq/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/wcsites-domains/faq/</guid>
      <description>Configure the external URL access for Oracle WebCenter Sites composite applications For Oracle WebCenter Sites composite applications to access the external URLs over the internet (if your cluster is behind a http proxy server), you must configure the following proxy parameters for Administration Server and Managed Server pods.
-Dhttp.proxyHost=www-your-proxy.com -Dhttp.proxyPort=proxy-port -Dhttps.proxyHost=www-your-proxy.com -Dhttps.proxyPort=proxy-port -Dhttp.nonProxyHosts=&amp;#34;localhost|wcsitesinfra-adminserver|wcsitesinfra-wcsites-server1|*.svc.cluster.local|*.your.domain.com|/var/run/docker.sock&amp;#34; To do this, edit the domain.yaml configuration file and append the proxy parameters to the spec.serverPod.env.JAVA_OPTIONS environment variable value.</description>
    </item>
    
    <item>
      <title>Persist adapter customizations</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/persisting-soa-adapters-customizations/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/persisting-soa-adapters-customizations/</guid>
      <description>The lifetime for any customization done in a file on a server pod is up to the lifetime of that pod. The changes are not persisted once the pod goes down or is restarted.
For example, the following configuration updates DbAdapter.rar to create a new connection instance and creates data source CoffeeShop on the Administration Console for the same with jdbc/CoffeeShopDS.
File location: /u01/oracle/soa/soa/connectors/DbAdapter.rar
&amp;lt;connection-instance&amp;gt; &amp;lt;jndi-name&amp;gt;eis/DB/CoffeeShop&amp;lt;/jndi-name&amp;gt; &amp;lt;connection-properties&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;XADataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;jdbc/CoffeeShopDS&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;DataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;PlatformClassName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;org.</description>
    </item>
    
    <item>
      <title>Perform WLST operations</title>
      <link>/fmw-kubernetes/21.3.2/soa-domains/adminguide/performing-wlst-operations/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.3.2/soa-domains/adminguide/performing-wlst-operations/</guid>
      <description>You can use the WebLogic Scripting Tool (WLST) to manage a domain running in a Kubernetes cluster. Some of the many ways to do this are provided here.
If the Administration Server was configured to expose a T3 channel using exposeAdminT3Channel when creating the domain, refer to Use WLST.
If you do not want to expose additional ports and perform WLST administration operations using the existing Kubernetes services created by the WebLogic Server Kubernetes operator, then follow this documentation.</description>
    </item>
    
  </channel>
</rss>