#!/bin/bash
# Copyright (c) 2021, Oracle and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at 
# https://oss.oracle.com/licenses/upl
#
# Description: This script is used to Execute RCU.
#

########### SIGINT handler ############
function _int() {
   echo "Stopping container."
   echo "SIGINT received, shutting down Admin Server!"
   $DOMAIN_HOME/bin/stopWebLogic.sh
   exit;
}

########### SIGTERM handler ############
function _term() {
   echo "Stopping container."
   echo "SIGTERM received, shutting down Admin Server!"
   $DOMAIN_HOME/bin/stopWebLogic.sh
   exit;
}

########### SIGKILL handler ############
function _kill() {
   echo "SIGKILL received, shutting down the server!"
   kill -9 $childPID
}

#######Random Password Generation########
function rand_pwd(){
    while true; do
         s=$(cat /dev/urandom | tr -dc "A-Za-z0-9" | fold -w 8 | head -n 1)
         if [[ ${#s} -ge 8 && "$s" == *[A-Z]* && "$s" == *[a-z]* && "$s" == *[0-9]*  ]]
         then
             break
         else
             echo "Password does not Match the criteria, re-generating..." >&2
         fi
    done
    echo "${s}" 
}

########### updateListenAddress ############
updateListenAddress() {
  mkdir -p ${DOMAIN_HOME}/logs

  export thehost=`hostname -I`
  echo "INFO: Updating the listen address - ${thehost} ${ADMIN_HOST}"
  cmd="/u01/oracle/oracle_common/common/bin/wlst.sh -skipWLSModuleScanning /u01/oracle/dockertools/updListenAddress.py $vol_name ${thehost} AdminServer ${ADMIN_HOST}"
}

INSTALL_START=$(date '+%s')

# Set SIGINT handler
trap _int SIGINT

# Set SIGTERM handler
trap _term SIGTERM

# Set SIGKILL handler
trap _kill SIGKILL

#Check on required parameters
PARAMS=true

DB_SCHEMA_PASSWORD_AUTOGENERATED=false
ADMIN_PASSWORD_AUTOGENERATED=false
SITES_ADMIN_PASSWORD_AUTOGENERATED=false
SITES_APP_PASSWORD_AUTOGENERATED=false
SITES_SS_PASSWORD_AUTOGENERATED=false

DB_CONNECTSTRING=$CUSTOM_CONNECTION_STRING
DB_USER=`cat /weblogic-operator/rcu-secrets/sys_username`
DB_PASSWORD=`cat /weblogic-operator/rcu-secrets/sys_password`
DB_SCHEMA_PASSWORD=`cat /weblogic-operator/rcu-secrets/password`
RCU_PREFIX=$CUSTOM_RCUPREFIX


# These values can be parameterized later on. Hardcoding for now.
export DOCKER_HOST=$LB_HOST

#Database Parameters
export DB_USER=$DB_USER
export DB_PASSWORD=$DB_PASSWORD
export DB_CONNECTSTRING=$DB_CONNECTSTRING

#Installer Parameters
export RCU_PREFIX=$RCU_PREFIX
export SAMPLES=$SAMPLES
export DOMAIN_NAME=$DOMAIN_NAME
export SITES_SERVER_NAME=$SITES_SERVER_NAME
export ADMIN_USERNAME=$ADMIN_USERNAME
export ADMIN_PORT=7001
export WCSITES_MANAGED_PORT=7002
export ADMIN_SSL_PORT=9001
export WCSITES_SSL_PORT=9002
WORK_DIR=/u01/wcs-wls-docker-install/work

#Hostname Parameters
export WCSITES_ADMIN_HOSTNAME=$(sed -r 's/\./\\\./g' <<< $(hostname -I))

#--------------------------------------------------------------------------------------------
cd /u01/wcs-wls-docker-install
#find bootstrap.properties -type f -exec dos2unix {} {} \;

sed -i 's,^\(script.rcu.prefix=\).*,\1'$RCU_PREFIX',' bootstrap.properties
sed -i 's,^\(script.java.path=\).*,\1'$JAVA_HOME',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.hostname=\).*,\1'$WCSITES_ADMIN_HOSTNAME',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.portnumber=\).*,\1'$WCSITES_MANAGED_PORT',' bootstrap.properties
sed -i 's,^\(script.db.user=\).*,\1'$DB_USER',' bootstrap.properties
sed -i 's,^\(script.db.password=\).*,\1'$DB_PASSWORD',' bootstrap.properties
sed -i 's,^\(script.db.schema.password=\).*,\1'$DB_SCHEMA_PASSWORD',' bootstrap.properties
sed -i 's,^\(script.db.connectstring=\).*,\1'$DB_CONNECTSTRING',' bootstrap.properties
sed -i 's,^\(script.oracle.home=\).*,\1'$ORACLE_HOME',' bootstrap.properties
sed -i 's,^\(script.work.dir=\).*,\1'$WORK_DIR',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.examples.avisports=\).*,\1'$SAMPLES',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.examples.fsii=\).*,\1'$SAMPLES',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.examples.Samples=\).*,\1'$SAMPLES',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.examples.blogs=\).*,\1'$SAMPLES',' bootstrap.properties
sed -i 's,^\(script.wcsites.binaries.install.with.examples=\).*,\1'$SAMPLES',' bootstrap.properties
sed -i 's,^\(script.oracle.domain=\).*,\1'$DOMAIN_NAME',' bootstrap.properties
sed -i 's,^\(script.server.name=\).*,\1'$SITES_SERVER_NAME',' bootstrap.properties
sed -i 's,^\(script.admin.server.username=\).*,\1'$ADMIN_USERNAME',' bootstrap.properties
sed -i 's,^\(script.admin.server.password=\).*,\1'$ADMIN_PASSWORD',' bootstrap.properties
sed -i 's,^\(script.admin.server.port=\).*,\1'$ADMIN_PORT',' bootstrap.properties
sed -i 's,^\(script.admin.server.ssl.port=\).*,\1'$ADMIN_SSL_PORT',' bootstrap.properties
sed -i 's,^\(script.sites.server.ssl.port=\).*,\1'$WCSITES_SSL_PORT',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.system.admin.user=\).*,\1'$SITES_ADMIN_USERNAME',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.system.admin.password=\).*,\1'$SITES_ADMIN_PASSWORD',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.app.user=\).*,\1'$SITES_APP_USERNAME',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.app.password=\).*,\1'$SITES_APP_PASSWORD',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.satellite.user=\).*,\1'$SITES_SS_USERNAME',' bootstrap.properties
sed -i 's,^\(script.oracle.wcsites.satellite.password=\).*,\1'$SITES_SS_PASSWORD',' bootstrap.properties

sed -i 's,^\(script.run.configwizard=\).*,\1'false',' bootstrap.properties
sed -i 's,^\(script.run.sitesconfig=\).*,\1'false',' bootstrap.properties

#--------------------------------------------------------------------------------------------
#RCU 
#Groovy files are responsible for exexuting RCU + ConfigWizard
#Source files for the same are located at ./OracleWebCenterSites/dockerfiles/12.2.1.4/wcs-wls-docker-install/src/
java -jar wcs-wls-docker-install.jar

#--------------------------------------------------------------------------------------------

if [ -e $WORK_DIR/WCSites_RCU_$RCU_PREFIX.suc ] 
then
	echo ""	
	echo "Sites RCU Phase completed successfull!!!"	
else
	echo ""	
	echo "Sites RCU Phase failed. Please check logs for details"
	exit
fi
	
#
# Export Domain Home/Root
#=========================
export DOMAIN_NAME=$DOMAIN_NAME
export DOMAIN_ROOT=$DOMAIN_ROOT_DIR
export DOMAIN_HOME="${DOMAIN_ROOT}/${DOMAIN_NAME}"

echo ""
if [ $DB_SCHEMA_PASSWORD_AUTOGENERATED == "true" ]; then
	echo "    ----> Oracle Database Schema Credential:	Password: $DB_SCHEMA_PASSWORD"    
fi



INSTALL_END=$(date '+%s')
INSTALL_ELAPSED=`expr $INSTALL_END - $INSTALL_START`

echo "Sites Installation completed in $INSTALL_ELAPSED seconds."
echo "---------------------------------------------------------"
echo ""
