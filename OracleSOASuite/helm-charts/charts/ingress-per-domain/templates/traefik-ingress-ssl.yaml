# Copyright (c) 2024, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
{{- if eq .Values.type "TRAEFIK" }}
{{- if (eq .Values.sslType "SSL") }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.wlsDomain.domainUID }}-traefik
  namespace: {{ .Release.Namespace }}
  labels:
    weblogic.resourceVersion: domain-v2
{{ include "common.labels" . | indent 4 }}
  annotations:
    kubernetes.io/ingress.class: 'traefik'
    traefik.ingress.kubernetes.io/router.entrypoints: 'websecure'
    traefik.ingress.kubernetes.io/router.tls: 'true'
    traefik.ingress.kubernetes.io/router.middlewares: '{{ .Release.Namespace}}-wls-proxy-ssl@kubernetescrd'
spec:
  rules:
  - host: '{{ .Values.traefik.hostname }}'
    http:
      paths:
      - path: /console
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      - path: /management
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      - path: /em
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      - path: /weblogic/ready
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      {{- if or (eq .Values.domainType "soa") }}
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-cluster-{{ .Values.wlsDomain.soaClusterName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.soaManagedServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "osb") }}
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-cluster-{{ .Values.wlsDomain.osbClusterName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.osbManagedServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "soa") (eq .Values.domainType "soaosb") }}
      - path: /soa-infra
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-cluster-{{ .Values.wlsDomain.soaClusterName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.soaManagedServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "soa") (eq .Values.domainType "soaosb") }}
      - path: /soa/composer
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-cluster-{{ .Values.wlsDomain.soaClusterName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.soaManagedServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "soa") (eq .Values.domainType "soaosb") }}
      - path: /integration/worklistapp
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-cluster-{{ .Values.wlsDomain.soaClusterName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.soaManagedServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "osb") (eq .Values.domainType "soaosb") }}
      - path: /servicebus
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "osb") (eq .Values.domainType "soaosb") }}
      - path: /testconsole
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "osb") (eq .Values.domainType "soaosb") }}
      - path: /xbusrouting
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "osb") (eq .Values.domainType "soaosb") }}
      - path: /xbustransform
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-{{ .Values.wlsDomain.adminServerName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.adminServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "soa") (eq .Values.domainType "soaosb") }}
      - path: /ess
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-cluster-{{ .Values.wlsDomain.soaClusterName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.soaManagedServerPort }}
      {{- end }}
      {{- if or (eq .Values.domainType "soa") (eq .Values.domainType "soaosb") }}
      - path: /EssHealthCheck
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ .Values.wlsDomain.domainUID }}-cluster-{{ .Values.wlsDomain.soaClusterName | lower | replace "_" "-" }}'
            port:
              number: {{ .Values.wlsDomain.soaManagedServerPort }}
      {{- end }}
  tls:
  - hosts:
    - '{{ .Values.traefik.hostname }}'
    secretName: {{ .Values.wlsDomain.domainUID }}-tls-cert
---
#Create Traefik Middleware custom resource for SSL Termination
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: wls-proxy-ssl
  namespace:  {{ .Release.Namespace }}
spec:
  headers:
    customRequestHeaders:
      X-Custom-Request-Header: ""
      X-Forwarded-For: ""
      WL-Proxy-Client-IP: ""
      WL-Proxy-SSL: ""
      WL-Proxy-SSL: "true"
    sslRedirect: true

{{- end }}
{{- end }}

