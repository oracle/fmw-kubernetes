<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle Fusion Middleware on Kubernetes</title>
    <link>/fmw-kubernetes/</link>
    <description>Recent content on Oracle Fusion Middleware on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2019 06:46:23 -0500</lastBuildDate>
    
	<atom:link href="/fmw-kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Topology</title>
      <link>/fmw-kubernetes/soa-domains/edg-guide/topology/</link>
      <pubDate>Wed, 22 Jun 2022 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/edg-guide/topology/</guid>
      <description>Assumptions The most relevant assumptions for the Oracle SOA Suite Kubernetes Enterprise Deployment Guide (EDG) topology are related to the database and web tiers. Typical on-premises production systems keep their high end database (such as RAC, RAC+DG, Exadata, Autonomous Database) out of the Kubernetes cluster and manage that tier separately. This implies that the database runs separately from the Kubernetes cluster hosting the application tier. The database provisioning and configuration process is out of the scope of the Oracle SOA Suite Kubernetes setup.</description>
    </item>
    
    <item>
      <title>Preparing an OKE environment</title>
      <link>/fmw-kubernetes/wccontent-domains/oracle-cloud/prepare-oke-environment/</link>
      <pubDate>Sun, 14 Feb 2021 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/oracle-cloud/prepare-oke-environment/</guid>
      <description>Contents  Create Public SSH Key to access all the Bastion and Worker nodes Create a compartment for OKE Create Container Clusters (OKE) Create Bastion Node to access Cluster Setup OCI CLI to download kubeconfig and access OKE Cluster  Create Public SSH Key to access all the Bastion and Worker nodes Create SSH key using ssh-keygen on linux terminal to access (ssh) the Compute instances (worker/bastion) in OCI.
ssh-keygen -t rsa -N &amp;#34;&amp;#34; -b 2048 -C demokey -f id_rsa Create a compartment for OKE Within your tenancy, there must be a compartment to contain the necessary network resources (VCN, subnets, internet gateway, route table, security lists).</description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/wccontent-domains/appendix/wcc-cluster-sizing-info/</link>
      <pubDate>Mon, 01 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/appendix/wcc-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Content cluster sizing recommendations    Oracle WCC Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Number of Managed Servers 2 3 5   Configurations per Managed Server No of CPU core(s) : 2, Memory : 16GB No of CPU core(s) : 4, Memory : 16GB No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Patch a Oracle WebCenter Sites product Docker image</title>
      <link>/fmw-kubernetes/wcsites-domains/patch-and-upgrade/patch-an-image/patch-wcsites-product-image/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/patch-and-upgrade/patch-an-image/patch-wcsites-product-image/</guid>
      <description>These instructions describe how to upgrade a new release of Oracle WebCenter Sites product Docker image in a running Oracle WebCenter Sites Kubernetes environment. A rolling upgrade approach is used to upgrade managed server pods of the domain.
It is expecting a Zero down time as a rolling upgrade approach is used.
 Prerequisites  Make sure Oracle WebCenter Sites domain is created and all the admin and managed pods are up and running.</description>
    </item>
    
    <item>
      <title>Preparing a file system</title>
      <link>/fmw-kubernetes/wccontent-domains/oracle-cloud/filesystem/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/oracle-cloud/filesystem/</guid>
      <description>Create Filesystem and security list for FSS  Note: Make sure you create the filesystem and security list in the OKE created VCN
   Login to OCI Console and go to Storage and Click File System   Click Create File System   You can create File System and Mount Targets with the default values. But in case you want to rename the file System and mount targets, follow below steps.</description>
    </item>
    
    <item>
      <title>Preparing an OKE environment</title>
      <link>/fmw-kubernetes/wcsites-domains/oracle-cloud/oke/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/oracle-cloud/oke/</guid>
      <description>Overview Create Public SSH Key to access all the Bastion/Worker nodes  Create SSH key using ssh-keygen on linux terminal.  Generating public/private rsa key pair. Your identification has been saved in &amp;lt;path&amp;gt;/id_rsa. Your public key has been saved in &amp;lt;path&amp;gt;/id_rsa.pub. The key fingerprint is: SHA256:xCi1gf1QFafbRwOM3WjUTgqEInwi6UklbuxbBeMzA6M demokey The key&amp;#39;s randomart image is: +---[RSA 2048]----+ | +++oo..++*++ | | ++==+==. oo=.+ | |Eo+o*+++o .o +o | | oo * .. o.... | | .</description>
    </item>
    
    <item>
      <title>Preparing OCIR</title>
      <link>/fmw-kubernetes/wccontent-domains/oracle-cloud/ocir/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/oracle-cloud/ocir/</guid>
      <description>Publish images to OCIR Push all the required images to OCIR and subsequently use from there. Follow the below steps for pushing the images to OCIR
Create an &amp;ldquo;Auth token&amp;rdquo; Create an &amp;ldquo;Auth token&amp;rdquo; which will be used as docker password to push and pull images from OCIR. Login to OCI Console and navigate to User Settings, which is in the drop down under your OCI user-profile, located at the top-right corner of the OCI console page.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/soa-domains/release-notes/</link>
      <pubDate>Fri, 15 Mar 2019 11:25:28 -0400</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle SOA Suite on Kubernetes.
Recent changes    Date Version Change     January 31, 2025 25.1.2 Supports Oracle SOA Suite 12.2.1.4 domains deployment using January 2025 PSU and known bug fixes. Support for WebLogic Kubernetes Operator 4.2.13. Oracle SOA Suite 12.2.1.4 Docker image for this release can be downloaded from My Oracle Support (MOS patch 37480757 for Oracle Linux 8) and container-registry.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/wcsites-domains/release-notes/</link>
      <pubDate>Fri, 15 Mar 2019 11:25:28 -0400</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle WebCenter Sites on Kubernetes.
Recent changes    Date Version Introduces backward incompatibilities Change     May 10, 2023 23.2.2 no Supports Oracle WebCenter Sites 12.2.1.4 domains deployment using April 2023 PSU and known bug fixes - certified for Oracle WebLogic Kubernetes Operator version 4.0.6. Oracle WebCenter Sites 12.2.1.4 container image for this release can be downloaded from My Oracle Support (MOS patch 35370108) and container-registry.</description>
    </item>
    
    <item>
      <title>Deploy using JDeveloper</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/supportjdev/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/supportjdev/</guid>
      <description>Learn how to deploy Oracle SOA Suite and Oracle Service Bus composite applications from Oracle JDeveloper (running outside the Kubernetes network) to an Oracle SOA Suite instance in the WebLogic Kubernetes Operator environment.
Use JDeveloper for development and test environments only. For a production environment, you should deploy using Application Control and WLST methods.
 Deploy Oracle SOA Suite and Oracle Service Bus composite applications to Oracle SOA Suite from JDeveloper To deploy Oracle SOA Suite and Oracle Service Bus composite applications from Oracle JDeveloper, the Administration Server must be configured to expose a T3 channel.</description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/soa-domains/appendix/soa-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/appendix/soa-cluster-sizing-info/</guid>
      <description>Oracle SOA cluster sizing minimum requirements    Oracle SOA Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Number of Managed Servers 2 2 4   Configurations per Managed Server No of CPU core(s) : 2, Memory : 16GB No of CPU core(s) : 4, Memory : 16GB No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/wcportal-domains/appendix/wcp-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/appendix/wcp-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Portal cluster sizing recommendations    WebCenter Portal Normal Usage Moderate Usage High Usage     Admin Server No of CPU(s) : 1, Memory : 4GB No of CPU(s) : 1, Memory : 4GB No of CPU(s) : 1, Memory : 4GB   Number of Managed Server No of Servers : 2 No of Servers : 2 No of Servers : 3   Configurations per Managed Server No of CPU(s) : 2, Memory : 16GB No of CPU(s) : 4, Memory : 16GB No of CPU(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/wcsites-domains/appendix/wcsites-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/appendix/wcsites-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Sites cluster sizing recommendations    Oracle WebCenter Sites Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Managed Server No of Servers : 2, No of CPU core(s) : 2, Memory : 16GB No of Servers : 2, No of CPU core(s) : 4, Memory : 16GB No of Servers : 3, No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Patch an image</title>
      <link>/fmw-kubernetes/soa-domains/patch_and_upgrade/patch-an-image/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/patch_and_upgrade/patch-an-image/</guid>
      <description>Oracle releases Oracle SOA Suite images regularly with the latest bundle and recommended interim patches in My Oracle Support (MOS). However, if you need to create images with new bundle and interim patches, you can build these images using the WebLogic Image Tool.
If you have access to the Oracle SOA Suite patches, you can patch an existing Oracle SOA Suite image with a bundle patch and interim patches. Oracle recommends that you use the WebLogic Image Tool to patch the Oracle SOA Suite image.</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) to load balance Oracle SOA Suite domain clusters. You can configure Traefik for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
 Install the Traefik (ingress-based) load balancer Create an Ingress for the domain Verify domain application URL access Uninstall the Traefik ingress Uninstall Traefik  Install the Traefik (ingress-based) load balancer   Use Helm to install the Traefik (ingress-based) load balancer.</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/wcportal-domains/manage-wcportal-domains/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/manage-wcportal-domains/configure-load-balancer/traefik/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) and configure it for non-SSL, SSL termination, and end-to-end SSL access of the application URL. Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
  Non-SSL and SSL termination
 Install the Traefik (ingress-based) load balancer Configure Traefik to manage ingresses Create an Ingress for the domain Verify domain application URL access Uninstall the Traefik ingress    End-to-end SSL configuration</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/wcsites-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) to load balance Oracle WebCenter Sites domain clusters. You can configure Traefik for access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Sites domain in a Kubernetes cluster:
Setting Up Loadbalancer Traefik for the WebCenter Sites Domain on K8S Follow these steps to set up Traefik as a loadbalancer for the Oracle WebCenter Sites domain:</description>
    </item>
    
    <item>
      <title>a. Using Design Console with NGINX(non-SSL)</title>
      <link>/fmw-kubernetes/idm-products/oig/configure-design-console/using-the-design-console-with-nginx-non-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/configure-design-console/using-the-design-console-with-nginx-non-ssl/</guid>
      <description>Configure an NGINX ingress (non-SSL) to allow Design Console to connect to your Kubernetes cluster.
  Prerequisites
  Setup routing rules for the Design Console ingress
  Create the ingress
  Update the T3 channel
  Restart the OIG Managed Server
  Design Console client
a. Using an on-premises installed Design Console
b. Using a container image for Design Console
  Login to the Design Console</description>
    </item>
    
    <item>
      <title>Patch an image</title>
      <link>/fmw-kubernetes/wccontent-domains/patch_and_upgrade/patch-an-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/patch_and_upgrade/patch-an-image/</guid>
      <description>Oracle aims to release Oracle WebCenter Content images regularly with latest bundle and recommended interim patches in My Oracle Support (MOS). However, if there is a need to create images with new bundle and interim patches, you can build these images using WebLogic Image Tool.
If you have access to the Oracle WebCenter Content patches, you can patch an existing Oracle WebCenter Content image with a bundle patch and interim patches.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/idm-products/oid/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oid/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle Internet Directory on Kubernetes.
Recent changes    Date Version Change     July, 2022 22.3.1 As of July 2022, Container support has been removed for Oracle Internet Directory. Refer to document ID 2723908.1 on My Oracle Support for more details.   April, 2022 22.2.1 Updated for CRI-O support.   October, 2021 21.4.1 Initial release of Oracle Identity Directory on Kubernetes.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/wccontent-domains/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/release-notes/</guid>
      <description>Review the latest changes for Oracle WebCenter Content on Kubernetes.
Recent changes    Date Version Change     October 28, 2022 22.4.1 Supports Oracle WebCenter Content 12.2.1.4 domains deployment using July 2022 PSU and known bug fixes - certified for Oracle WebLogic Kubernetes Operator version 3.4.2. Oracle WebCenter Content 12.2.1.4 container image for this release can be downloaded from My Oracle Support (MOS patch 34409720).   June 28, 2022 22.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/wcportal-domains/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/release-notes/</guid>
      <description>Recent changes    Date Version Change     June 10, 2022 22.2.3 Only Oracle WebCenter Portal 12.2.1.4 is supported and certified with the WebLogic Kubernetes operator version 3.3.0.   June 30, 2021 21.2.3 Only Oracle WebCenter Portal 12.2.1.4 is supported and certified with the WebLogic Kubernetes operator version 3.1.1.    </description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/wccontent-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.6.0 or later for production deployments) to load balance Oracle WebCenter Content domain clusters. You can configure Traefik for non-SSL, SSL termination and end-to-end SSL access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Content	domain in a Kubernetes cluster:
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/wccontent-domains/oracle-cloud/configure-load-balancer/traefik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/oracle-cloud/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.6.0 or later for production deployments) to load balance Oracle WebCenter Content domain clusters.
Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Content	domain in a Kubernetes cluster:
Contents   Non-SSL and SSL termination
 Install the Traefik (ingress-based) load balancer Configure Traefik to manage ingresses Create an Ingress for the domain Create a certificate and generate a Kubernetes secret Create Traefik custom resource Install Ingress for SSL termination configuration    End-to-End SSL configuration</description>
    </item>
    
    <item>
      <title>Setup steps</title>
      <link>/fmw-kubernetes/soa-domains/edg-guide/setup-edg/</link>
      <pubDate>Wed, 22 Jun 2022 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/edg-guide/setup-edg/</guid>
      <description>This section provides recommended steps to set up Oracle SOA Suite enterprise deployment on Kubernetes to eliminate single points of failure and to provide high availability.
 Set up your Kubernetes cluster Prepare the environment  Configure firewalls and network Load Oracle SOA Suite images on all the worker nodes Enable a shared storage location for the persistent volume   Create a database and the appropriate database services Install and configure Oracle HTTP Server in the DMZ Configure a front-end load balancer Create worker nodes Apply operating system changes for Coherence Deploy WebLogic Kubernetes Operator and Oracle SOA Suite Configure redundant persistent volume Configure the required priority for mounts Set front-end addresses Enable FAN for GridLink data sources Configure ASM Configure coredns allocation Adjust server&amp;rsquo;s pods Liveness Probe  Set up your Kubernetes cluster Prepare the environment for the Kubernetes control plane (Master nodes)   Create the L4/TCP listener for the load balancer (LBR).</description>
    </item>
    
    <item>
      <title>Quick start deployment guide</title>
      <link>/fmw-kubernetes/wccontent-domains/appendix/quickstart-deployment-guide/</link>
      <pubDate>Mon, 01 Feb 2021 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/appendix/quickstart-deployment-guide/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Content domain deployment in a Kubernetes cluster (on-premise environments) with WebLogic Kubernetes Operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements Supported Linux kernel for deploying and running Oracle WebCenter Content domain with the WebLogic Kubernetes Operator is Oracle Linux 7 (UL6+) and Red Hat Enterprise Linux 7 (UL3+ only with standalone Kubernetes).</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/wccontent-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Tue, 22 Dec 2020 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle WebCenter Content domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Content domain in a Kubernetes cluster:
See the official installation document for prerequisites.
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/wccontent-domains/oracle-cloud/configure-load-balancer/nginx/</link>
      <pubDate>Tue, 22 Dec 2020 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/oracle-cloud/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle WebCenter Content domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Content domain in a Kubernetes cluster:
See the official installation document for prerequisites.
Contents   Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/soa-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle SOA Suite domain deployment in a Kubernetes cluster (on-premise environments) with the WebLogic Kubernetes Operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements The Linux kernel supported for deploying and running Oracle SOA Suite domains with the operator is Oracle Linux 8 and Red Hat Enterprise Linux 8.</description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/wcportal-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Portal domain deployment in a Kubernetes cluster (on-premise environments) with the WebLogic Kubernetes Operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements The Linux kernel supported for deploying and running Oracle WebCenter Portal domains with the operator is Oracle Linux 7 (UL6+) and Red Hat Enterprise Linux 7 (UL3+ only with standalone Kubernetes).</description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/wcsites-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Sites domain deployment in a Kubernetes cluster (on-premise environments) with the Oracle WebLogic Server Kubernetes operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements Supported Linux kernel for deploying and running Oracle WebCenter Sites domains with the operator is Oracle Linux 7 UL6+ and Red Hat Enterprise Linux 7 (UL3+).</description>
    </item>
    
    <item>
      <title>Preparing the Bastion host</title>
      <link>/fmw-kubernetes/wcsites-domains/oracle-cloud/bastion/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/oracle-cloud/bastion/</guid>
      <description>STEP 1 : Create Public Security List Create Public Security List (bastion_public_sec_list) in same VCN as that of OKE Cluster for Bastion Node
 Ingress Rules as: (where 10.0.22.0/24 is the CIDR planned to be used for bastion subnet)  Egress as:   STEP 2 : Create Private Security List Create Private Security List (bastion_private_sec_list) in same VCN as that of OKE Cluster which will be added into Worker Node subnet.</description>
    </item>
    
    <item>
      <title>Deploy using Maven and Ant</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/deploy-using-maven-ant/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/deploy-using-maven-ant/</guid>
      <description>Learn how to deploy Oracle SOA Suite and Oracle Service Bus composite applications using the Maven and Ant based approach in an Oracle SOA Suite in WebLogic Kubernetes Operator environment.
Before deploying composite applications, we need to create a Kubernetes pod in the same cluster where the Oracle SOA Suite domain is running, so that composite applications can be deployed using the internal Kubernetes Service for the Administration Server URL.</description>
    </item>
    
    <item>
      <title>Enable additional URL access</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/enable-additional-url-access/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/enable-additional-url-access/</guid>
      <description>This section provides information about how to extend an existing ingress (Non-SSL and SSL termination) to enable additional application URL access for Oracle SOA Suite domains.
The ingress per domain created in the steps in Set up a load balancer exposes the application paths defined in template YAML files present at ${WORKDIR}/charts/ingress-per-domain/templates/.
To extend an existing ingress with additional application URL access:
  Update the template YAML file at ${WORKDIR}/charts/ingress-per-domain/templates/ to define additional path rules.</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle SOA Suite domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
See the official installation document for prerequisites.
 Install the NGINX load balancer for non-SSL and SSL termination configuration Generate secret for SSL access Install NGINX load balancer for end-to-end SSL configuration Configure NGINX to manage ingresses Verify domain application URL access Uninstall NGINX ingress Uninstall NGINX  To get repository information, enter the following Helm commands:</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/wcportal-domains/manage-wcportal-domains/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/manage-wcportal-domains/configure-load-balancer/nginx/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install the ingress-based NGINX load balancer and configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL. Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
See the official installation document for prerequisites.
  Non-SSL and SSL termination
 Install the NGINX load balancer Configure NGINX to manage ingresses Verify non-SSL and SSL termination access    End-to-end SSL configuration</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/wcsites-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle WebCenter Sites domain clusters. You can configure NGINX for access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Sites domain in a Kubernetes cluster:
See the official installation document for prerequisites.
Add the Helm repos (if not added) Add following Helm repos</description>
    </item>
    
    <item>
      <title>Upgrade an operator release</title>
      <link>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-operator-release/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-operator-release/</guid>
      <description>To upgrade the WebLogic Kubernetes operator, use the helm upgrade command with new Helm chart and operator image. See the steps here to pull the operator image and set up the Oracle SOA Suite repository that contains the operator chart. To upgrade the operator run the following command:
$ cd ${WORKDIR} $ helm upgrade \ --reuse-values \ --version 4.2.13 \ --namespace weblogic-operator-namespace \ --wait \ weblogic-kubernetes-operator \ weblogic-operator/weblogic-operator  Note: When the WebLogic Kubernetes Operator is upgraded from release version 3.</description>
    </item>
    
    <item>
      <title>Upgrade an operator release</title>
      <link>/fmw-kubernetes/wcsites-domains/patch-and-upgrade/upgrade-operator-release/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/patch-and-upgrade/upgrade-operator-release/</guid>
      <description>These instructions apply to upgrading operators within the 4.x release family as additional versions are released.
To upgrade the Kubernetes operator, use the helm upgrade command. When upgrading the operator, the helm upgrade command requires that you supply a new Helm chart and image. For example:
$ helm upgrade \ --reuse-values \ --set image=oracle/weblogic-kubernetes-operator:4.0.6 \ --namespace weblogic-operator-namespace \ --wait \ weblogic-operator \ kubernetes/charts/weblogic-operator </description>
    </item>
    
    <item>
      <title>b. Using Design Console with NGINX(SSL)</title>
      <link>/fmw-kubernetes/idm-products/oig/configure-design-console/using-the-design-console-with-nginx-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/configure-design-console/using-the-design-console-with-nginx-ssl/</guid>
      <description>Configure an NGINX ingress (SSL) to allow Design Console to connect to your Kubernetes cluster.
  Prerequisites
  Setup routing rules for the Design Console ingress
  Create the ingress
  Update the T3 channel
  Restart the OIG Managed Server
  Design Console client
a. Using an on-premises installed Design Console
b. Using a container image for Design Console
  Login to the Design Console</description>
    </item>
    
    <item>
      <title>Monitor an Oracle WebCenter Content domain</title>
      <link>/fmw-kubernetes/wccontent-domains/adminguide/weblogic-monitoring-exporter-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/adminguide/weblogic-monitoring-exporter-setup/</guid>
      <description>You can monitor a WebCenter Content domain using Prometheus and Grafana by exporting the metrics from the domain instance using the WebLogic Monitoring Exporter.
Set up monitoring for OracleWebCenterContent domain Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle WebCenter Content Suite instance and monitor them using Prometheus and Grafana. Follow these steps to set up monitoring for an Oracle WebCenter Content Suite instance. For more details on WebLogic Monitoring Exporter, see here.</description>
    </item>
    
    <item>
      <title>Upgrade an WebLogic Kubernetes Operator release</title>
      <link>/fmw-kubernetes/wccontent-domains/patch_and_upgrade/upgrade-operator-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/patch_and_upgrade/upgrade-operator-release/</guid>
      <description>These instructions apply to upgrading WebLogic Kubernetes Operators within the 3.x release family as additional versions are released.
To upgrade WebLogic Kubernetes Operator, use the helm upgrade command. Make sure that the weblogic-kubernetes-operator repository on your local machine is at the WebLogic Kubernetes Operator release to which you are upgrading. When upgrading the WebLogic Kubernetes Operator, the helm upgrade command requires that you supply a new Helm chart and image. For example:</description>
    </item>
    
    <item>
      <title>Apache webtier</title>
      <link>/fmw-kubernetes/wcsites-domains/adminguide/configure-load-balancer/apache/</link>
      <pubDate>Wed, 10 May 2023 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/adminguide/configure-load-balancer/apache/</guid>
      <description>This section provides information about how to install and configure the Apache webtier to load balance Oracle WebCenter Sites domain clusters. You can configure Apache webtier for non-SSL and SSL termination access of the application URL.
Follow these steps to set up the Apache webtier as a load balancer for an Oracle WebCenter Sites domain in a Kubernetes cluster:
 Build the Apache webtier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache webtier Helm chart Verify domain application URL access Uninstall Apache webtier  Build the Apache webtier image Refer to the sample, to build the Apache webtier Docker image.</description>
    </item>
    
    <item>
      <title>Deploy using composites in a persistent volume or image</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/deploy-artifacts/</link>
      <pubDate>Tue, 19 Oct 2021 12:04:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/deploy-artifacts/</guid>
      <description>Learn how to deploy Oracle SOA Suite and Oracle Service Bus composite applications artifacts in a Kubernetes persistent volume or in an image to an Oracle SOA Suite environment deployed using a WebLogic Kubernetes Operator.
The deployment methods described in Deploy using JDeveloper and Deploy using Maven and Ant are manual processes. If you have the deployment artifacts (archives) already built, then you can package them either into a Kubernetes persistent volume or in an image and use this automated process to deploy the artifacts to an Oracle SOA Suite domain.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/wccontent-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Mon, 01 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Elasticsearch integration for logs</title>
      <link>/fmw-kubernetes/wccontent-domains/adminguide/elasticsearch-integration/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/adminguide/elasticsearch-integration/</guid>
      <description>1. Integrate Elasticsearch to WebLogic Kubernetes Operator For reference information, see Elasticsearch integration for the WebLogic Kubernetes Operator.
To enable elasticsearch integration, you must edit file ${WORKDIR}/charts/weblogic-operator/values.yaml before deploying the WebLogic Kubernetes Operator.
# elkIntegrationEnabled specifies whether or not ELK integration is enabled. elkIntegrationEnabled: true # logStashImage specifies the docker image containing logstash. # This parameter is ignored if &#39;elkIntegrationEnabled&#39; is false. logStashImage: &amp;quot;logstash:6.8.23&amp;quot; # elasticSearchHost specifies the hostname of where Elasticsearch is running.</description>
    </item>
    
    <item>
      <title>Preparing a file system</title>
      <link>/fmw-kubernetes/wcsites-domains/oracle-cloud/filesystem/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/oracle-cloud/filesystem/</guid>
      <description>Create Filesystem and security list for FSS Note: Make sure you create the filesystem and security list in the OKE created VCN
 Login to OCI Console and go to File Storage and Click &amp;ldquo;File System&amp;rdquo;  Click &amp;ldquo;Create File System&amp;rdquo;  You can create File System and Mount Targets with the default values. But in case you want to rename the file System and mount targets, follow below steps. Note: Make Sure the Virtual Cloud Network in Mount Target refers to the one where your instances are created and you will be accessing this file system.</description>
    </item>
    
    <item>
      <title>Apache web tier</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/apache/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/apache/</guid>
      <description>This section provides information about how to install and configure the Apache web tier to load balance Oracle SOA Suite domain clusters. You can configure Apache web tier for non-SSL and SSL termination access of the application URL.
Follow these steps to set up the Apache web tier as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
 Build the Apache web tier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache web tier Helm chart Verify domain application URL access Uninstall Apache web tier  Build the Apache web tier image Refer to the sample, to build the Apache web tier Docker image.</description>
    </item>
    
    <item>
      <title>Configure SSL certificates</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configuring-custom-ssl-certificates/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configuring-custom-ssl-certificates/</guid>
      <description>Secure Socket Layer (SSL) provides a secured communication for data sent over unsecured networks. In an SSL termination scenario, you can configure SSL between the client browser and the load balancer in your Oracle SOA Suite instance to ensure that applications are accessed securely. In an SSL end-to-end scenario, an Oracle SOA Suite domain is configured to use a self-signed SSL certificate that was generated during domain creation. Clients will typically receive a message indicating that the signing CA for the certificate is unknown and not trusted.</description>
    </item>
    
    <item>
      <title>Monitor a domain and publish logs</title>
      <link>/fmw-kubernetes/wcsites-domains/adminguide/monitoring-wcsites-domains/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/adminguide/monitoring-wcsites-domains/</guid>
      <description>After the Oracle WebCenter Sites domain is set up, you can:
 Monitor the Oracle WebCenter Sites instance using Prometheus and Grafana Publish WebLogic Server logs into Elasticsearch  Monitor the Oracle WebCenter Sites instance using Prometheus and Grafana Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle WebCenter Sites instance and monitor them using Prometheus and Grafana.
Prerequisites This document assumes that the Prometheus Operator is deployed on the Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/soa-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/wcportal-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/wcsites-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle SOA Suite domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/wcsites-domains/patch-and-upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/patch-and-upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle WebCenter Sites domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/wccontent-domains/patch_and_upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/patch_and_upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle WebCenter Content domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch</title>
      <link>/fmw-kubernetes/wccontent-domains/adminguide/weblogic-logging-exporter-setup/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/adminguide/weblogic-logging-exporter-setup/</guid>
      <description>The WebLogic Logging Exporter adds a log event handler to WebLogic Server. WebLogic Server logs can be pushed to Elasticsearch in Kubernetes directly by using the Elasticsearch REST API. For more details, see to the WebLogic Logging Exporter project.
This sample shows you how to publish WebLogic Server logs to Elasticsearch and view them in Kibana. For publishing WebLogic Kubernetes Operator logs, see this sample.
Prerequisites This document assumes that you have already set up Elasticsearch and Kibana for logs collection.</description>
    </item>
    
    <item>
      <title>Creating an OCIR</title>
      <link>/fmw-kubernetes/wcsites-domains/oracle-cloud/ocir/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/oracle-cloud/ocir/</guid>
      <description>Creation of OCIR Push all the required images to OCIR and use from OCIR. Follow the below steps before pushing the images to OCIR
Create an &amp;ldquo;Auth token&amp;rdquo; Create an &amp;ldquo;Auth token&amp;rdquo; which will be used as docker password to push/pull images from OCIR Login to Console and navigate to User Settings, which is in the drop down under your OCI username in the top nav  On User Details page, select &amp;ldquo;Auth Tokens&amp;rdquo; in the left nav and then Click the &amp;ldquo;Generate Token&amp;rdquo; button: Enter a Name and Click &amp;ldquo;Generate Token&amp;rdquo;  Token will get generated  Copy the generated token.</description>
    </item>
    
    <item>
      <title>Apache webtier</title>
      <link>/fmw-kubernetes/wcportal-domains/manage-wcportal-domains/configure-load-balancer/apachewebtier/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/manage-wcportal-domains/configure-load-balancer/apachewebtier/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install Apache webtier and configure it for non-SSL and SSL termination access of the application URL. Follow these steps to set up Apache webtier as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
 Build the Apache webtier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache webtier Helm chart Verify domain application URL access Uninstall Apache webtier  Build the Apache webtier image To build the Apache webtier Docker image, refer to the sample.</description>
    </item>
    
    <item>
      <title>Elasticsearch integration for logs</title>
      <link>/fmw-kubernetes/wcsites-domains/adminguide/elasticsearch-integration/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/adminguide/elasticsearch-integration/</guid>
      <description>1. Integrate Elasticsearch to WebLogic Kubernetes Operator For reference information, see Elasticsearch integration for the WebLogic Kubernetes Operator.
To enable elasticsearch integration, you must edit file kubernetes/charts/weblogic-operator/values.yaml before deploying the WebLogic Kubernetes Operator.
# elkIntegrationEnabled specifies whether or not ELK integration is enabled. elkIntegrationEnabled: true # logStashImage specifies the Docker image containing logstash. # This parameter is ignored if &#39;elkIntegrationEnabled&#39; is false. logStashImage: &amp;quot;logstash:6.6.0&amp;quot; # elasticSearchHost specifies the hostname of where Elasticsearch is running.</description>
    </item>
    
    <item>
      <title>Monitor a domain and publish logs</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/monitoring-soa-domains/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/monitoring-soa-domains/</guid>
      <description>After the Oracle SOA Suite domain is set up, you can:
 Monitor the Oracle SOA Suite instance using Prometheus and Grafana Publish WebLogic Server logs into Elasticsearch Publish SOA server diagnostics logs into Elasticsearch  Monitor the Oracle SOA Suite instance using Prometheus and Grafana Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle SOA Suite instance and monitor them using Prometheus and Grafana.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch</title>
      <link>/fmw-kubernetes/wcsites-domains/adminguide/weblogic-logging-exporter-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/adminguide/weblogic-logging-exporter-setup/</guid>
      <description>The WebLogic Logging Exporter adds a log event handler to WebLogic Server. WebLogic Server logs can be pushed to Elasticsearch in Kubernetes directly by using the Elasticsearch REST API. For more details, see to the WebLogic Logging Exporter project.
This sample shows you how to publish WebLogic Server logs to Elasticsearch and view them in Kibana. For publishing operator logs, see this sample.
Prerequisites This document assumes that you have already set up Elasticsearch and Kibana for logs collection.</description>
    </item>
    
    <item>
      <title>Additional Configuration</title>
      <link>/fmw-kubernetes/wcportal-domains/appendix/additional-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/appendix/additional-configuration/</guid>
      <description>Creating a Connection to Oracle WebCenter Content Server To enable content integration within Oracle WebCenter Portal create a connection to Oracle WebCenter Content Server using JAX-WS. Follow the steps in the documentation link to create the connection.
 Note: If the Oracle WebCenter Content Server is configured with SSL, before creating the connection, the SSL certificate should be imported into any location under mount path of domain persistent volume to avoid loss of certificate due pod restart.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch Using Fluentd</title>
      <link>/fmw-kubernetes/wccontent-domains/adminguide/logging-fluentd-setup/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/adminguide/logging-fluentd-setup/</guid>
      <description>Introduction This page describes to how to configure a WebLogic domain to use Fluentd to send log information to Elasticsearch. Here’s the general mechanism for how this works:
 fluentd runs as a separate container in the Administration Server and Managed Server pods The log files reside on a volume that is shared between the weblogic-server and fluentd containers fluentd tails the domain logs files and exports them to Elasticsearch A ConfigMap contains the filter and format rules for exporting log records.</description>
    </item>
    
    <item>
      <title>Expose the T3/T3S protocol</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/enablingt3/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/enablingt3/</guid>
      <description>Oracle strongly recommends that you do not expose non-HTTPS traffic (T3/T3s/LDAP/IIOP/IIOPs) outside of the external firewall. You can control this access using a combination of network channels and firewalls.
 You can create T3/T3S channels and the corresponding Kubernetes service to expose the T3/T3S protocol for the Administration Server and Managed Servers in an Oracle SOA Suite domain.
The WebLogic Kubernetes Operator provides an option to expose a T3 channel for the Administration Server using the exposeAdminT3Channel setting during domain creation, then the matching T3 service can be used to connect.</description>
    </item>
    
    <item>
      <title>Uninstall an Oracle WebCenter Portal domain</title>
      <link>/fmw-kubernetes/wcportal-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcportal-domains/cleanup-domain-setup/</guid>
      <description>To clean up the Oracle WebCenter Portal domain setup, follow the steps below.
Delete the Generated Domain Home To remove a domain home that you generated by running the create-domain.sh script in your production or testing environment, use the delete-domain-job.yaml file located at, &amp;lt;$WORKDIR&amp;gt;/create-wcp-domain/domain-home-on-pv/output/weblogic-domains/wcp-domain&amp;gt; directory.
$ kubectl create -f delete-domain-job.yaml Clean Up the create-domain-job script After Execution Failure To clean up the create-domain-job script:
  Get the create domain job and configmaps:</description>
    </item>
    
    <item>
      <title>Configure an additional mount or shared space to a domain for Imaging and Capture</title>
      <link>/fmw-kubernetes/wccontent-domains/oracle-cloud/configure-mount-share/</link>
      <pubDate>Sun, 10 Apr 2022 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/oracle-cloud/configure-mount-share/</guid>
      <description>A volume can be mounted to a server pod which can be accessible directly from outside Kubernetes cluster so that an external application could write new files to it.
This can be used specifically in WebCenter Imaging and WebCenter Capture applications for File Imports.
Kubernetes supports several types of volumes as given in Volumes | Kubernetes.
Further in this section, we will take nfs volume as an example.
Mount &amp;ldquo;nfs&amp;rdquo; as volume Create a NFS File system as described in the section Preparing a file system or an already existing NFS server can also be used.</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/wccontent-domains/cleanup-domain-setup/</link>
      <pubDate>Mon, 15 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle WebCenter Content domain setup.
Stop all Administration and Managed server pods First stop the all pods related to a domain. This can be done by patching domain &amp;ldquo;serverStartPolicy&amp;rdquo; to &amp;ldquo;NEVER&amp;rdquo;. Here is the sample command for the same.
$ kubectl patch domain wcc-domain-name -n wcc-namespace --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; For example:
kubectl patch domain wccinfra -n wccns --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; Remove the domain   Remove the domain&amp;rsquo;s ingress (for example, Traefik ingress) using Helm:</description>
    </item>
    
    <item>
      <title>Configure an additional mount or shared space to a domain for Imaging and Capture</title>
      <link>/fmw-kubernetes/wccontent-domains/adminguide/configure-mount-share/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wccontent-domains/adminguide/configure-mount-share/</guid>
      <description>A volume can be mounted to a server pod which can be accessible directly from outside Kubernetes cluster so that an external application could write new files to it.
This can be used specifically in WebCenter Imaging and WebCenter Capture applications for File Imports.
Kubernetes supports several types of volumes as given in Volumes | Kubernetes.
Further in this section, we will take nfs volume as an example.
Mount &amp;ldquo;nfs&amp;rdquo; as volume To use a volume, specify the volumes to provide for the Pod in .</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/soa-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle SOA Suite domain setup.
Remove the domain   Remove the domain&amp;rsquo;s ingress (for example, Traefik ingress) using Helm:
$ helm uninstall soa-domain-ingress -n sample-domain1-ns For example:
$ helm uninstall soainfra-traefik -n soans   Remove the domain resources by using the sample delete-weblogic-domain-resources.sh script present at ${WORKDIR}/delete-domain:
$ cd ${WORKDIR}/delete-domain $ ./delete-weblogic-domain-resources.sh -d sample-domain1 For example:
$ cd ${WORKDIR}/delete-domain $ ./delete-weblogic-domain-resources.sh -d soainfra   Use kubectl to confirm that the server pods and domain resource are deleted:</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/wcsites-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle WebCenter Sites domain setup.
Stop all Administration and Managed server pods First stop the all pods related to a domain. This can be done by patching domain &amp;ldquo;serverStartPolicy&amp;rdquo; to &amp;ldquo;Never&amp;rdquo;. Here is the sample command for the same.
$ kubectl patch domain wcsites-domain-name -n wcsites-namespace --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;Never&amp;#34; }]&amp;#39; For example:
$ kubectl patch domain wcsitesinfra -n wcsites-ns --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;Never&amp;#34; }]&amp;#39; Drop the RCU schemas $ cd work-dir-name/weblogic-kubernetes-operator $ kubectl apply -f kubernetes/create-wcsites-domain/output/weblogic-domains/wcsitesinfra/delete-domain-job.</description>
    </item>
    
    <item>
      <title>Persist adapter customizations</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/persisting-soa-adapters-customizations/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/persisting-soa-adapters-customizations/</guid>
      <description>The lifetime for any customization done in a file on a server pod is up to the lifetime of that pod. The changes are not persisted once the pod goes down or is restarted.
For example, the following configuration updates DbAdapter.rar to create a new connection instance and creates data source CoffeeShop on the Administration Console for the same with jdbc/CoffeeShopDS.
File location: /u01/oracle/soa/soa/connectors/DbAdapter.rar
&amp;lt;connection-instance&amp;gt; &amp;lt;jndi-name&amp;gt;eis/DB/CoffeeShop&amp;lt;/jndi-name&amp;gt; &amp;lt;connection-properties&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;XADataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;jdbc/CoffeeShopDS&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;DataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;PlatformClassName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;org.</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/fmw-kubernetes/soa-domains/faq/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/faq/</guid>
      <description>Overriding tuning parameters is not supported using configuration overrides The WebLogic Kubernetes Operator enables you to override some of the domain configuration using configuration overrides (also called situational configuration). See supported overrides. Overriding the tuning parameters such as MaxMessageSize and PAYLOAD, for Oracle SOA Suite domains is not supported using the configuration overrides feature. However, you can override them using the following steps:
  Specify the new value using the environment variable K8S_REFCONF_OVERRIDES in serverPod.</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/fmw-kubernetes/wcsites-domains/faq/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/faq/</guid>
      <description>Configure the external URL access for Oracle WebCenter Sites composite applications For Oracle WebCenter Sites composite applications to access the external URLs over the internet (if your cluster is behind a http proxy server), you must configure the following proxy parameters for Administration Server and Managed Server pods.
-Dhttp.proxyHost=www-your-proxy.com -Dhttp.proxyPort=proxy-port -Dhttps.proxyHost=www-your-proxy.com -Dhttps.proxyPort=proxy-port -Dhttp.nonProxyHosts=&amp;#34;localhost|wcsitesinfra-adminserver|wcsitesinfra-wcsites-server1|*.svc.cluster.local|*.your.domain.com|/var/run/docker.sock&amp;#34; To do this, edit the domain.yaml configuration file and append the proxy parameters to the spec.serverPod.env.JAVA_OPTIONS environment variable value.</description>
    </item>
    
    <item>
      <title>Perform WLST operations</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/performing-wlst-operations/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/performing-wlst-operations/</guid>
      <description>You can use the WebLogic Scripting Tool (WLST) to manage a domain running in a Kubernetes cluster. Some of the many ways to do this are provided here.
If the Administration Server was configured to expose a T3 channel using exposeAdminT3Channel when creating the domain, refer to Use WLST.
If you do not want to expose additional ports and perform WLST administration operations using the existing Kubernetes services created by the WebLogic Server Kubernetes operator, then follow this documentation.</description>
    </item>
    
    <item>
      <title>Patch and Upgrade</title>
      <link>/fmw-kubernetes/idm-products/oud/patch-and-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oud/patch-and-upgrade/</guid>
      <description>In this section you learn how to upgrade OUD from a previous version. Follow the section relevant to the version you are upgrading from.
 Upgrading to January 25 (25.1.1) from April 23 (23.2.1) or later Upgrading to January 25 (25.1.1) from October 22 (22.4.1) or January 23 (23.1.1) Upgrading to January 25 (25.1.1) from July 22 (22.3.1) Upgrading to January 25 (25.1.1) from releases prior to July 22 (22.3.1) Upgrading Elasticsearch and Kibana  Note: If on July 22 (22.</description>
    </item>
    
    <item>
      <title>a) Scaling Up/Down OUD Pods </title>
      <link>/fmw-kubernetes/idm-products/oud/manage-oud-containers/scaling-up-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oud/manage-oud-containers/scaling-up-down/</guid>
      <description>Introduction This section describes how to increase or decrease the number of OUD pods in the Kubernetes deployment.
Note: The instructions below are for scaling servers up or down manually. If you wish to use autoscaling, see Kubernetes Horizontal Pod Autoscaler. Please note, if you have enabled autoscaling, it is recommended to delete the autoscaler before running the commands below.
View existing OUD pods By default the oud-ds-rs helm chart deployment starts three pods: oud-ds-rs-0 and two replica pods oud-ds-rs-1 and oud-ds-rs-2.</description>
    </item>
    
    <item>
      <title>a) Scaling Up/Down OUDSM Pods </title>
      <link>/fmw-kubernetes/idm-products/oudsm/manage-oudsm-containers/scaling-up-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oudsm/manage-oudsm-containers/scaling-up-down/</guid>
      <description>Introduction This section describes how to increase or decrease the number of OUDSM pods in the Kubernetes deployment.
View existing OUDSM pods By default the oudsm helm chart deployment starts one pod: oudsm-1.
The number of pods started is determined by the replicaCount, which is set to 1 by default. A value of 1 starts the pod above.
To scale up or down the number of OUDSM pods, set replicaCount accordingly.</description>
    </item>
    
    <item>
      <title>a. Create OAM domains using WLST scripts</title>
      <link>/fmw-kubernetes/idm-products/oam/create-oam-domains/create-oam-domains-using-wlst/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/create-oam-domains/create-oam-domains-using-wlst/</guid>
      <description>Introduction
  Prerequisites
  Prepare the create domain script
  Run the create domain script
  Set the OAM server memory parameters
  Initializing the domain
  Verify the results
a. Verify the domain, pods and services
b. Verify the domain
c. Verify the pods
  Introduction The OAM deployment scripts demonstrate the creation of an OAM 12.2.1.4 domain home on an existing Kubernetes persistent volume (PV) and persistent volume claim (PVC).</description>
    </item>
    
    <item>
      <title>a. Create OIG domains using WLST scripts</title>
      <link>/fmw-kubernetes/idm-products/oig/create-oig-domains/create-oig-domains-using-wlst/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/create-oig-domains/create-oig-domains-using-wlst/</guid>
      <description>Introduction
  Prerequisites
  Prepare the create domain script
  Run the create domain script
a. Generate the create domain script
b. Setting the OIM server memory parameters
c. Run the create domain scripts
  Verify the results
a. Verify the domain, pods and services
b. Verify the domain
c. Verify the pods
  Introduction The OIG 12.2.1.4 deployment scripts demonstrate the creation of an OIG domain home on an existing Kubernetes persistent volume (PV) and persistent volume claim (PVC).</description>
    </item>
    
    <item>
      <title>a. Domain Life Cycle</title>
      <link>/fmw-kubernetes/idm-products/oam/manage-oam-domains/domain-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/manage-oam-domains/domain-lifecycle/</guid>
      <description>View existing OAM servers Starting/Scaling up OAM Managed servers Stopping/Scaling down OAM Managed servers Starting/Scaling up OAM Policy Managed servers Stopping/Scaling down OAM Policy Managed servers Stopping and starting the Administration Server and Managed Servers Domain lifecycle sample scripts  As OAM domains use the WebLogic Kubernetes Operator, domain lifecyle operations are managed using the WebLogic Kubernetes Operator itself.
This document shows the basic operations for starting, stopping and scaling servers in the OAM domain.</description>
    </item>
    
    <item>
      <title>a. Domain life cycle</title>
      <link>/fmw-kubernetes/idm-products/oig/manage-oig-domains/domain-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/manage-oig-domains/domain-lifecycle/</guid>
      <description>View existing OIG servers Starting/Scaling up OIG Managed servers Stopping/Scaling down OIG Managed servers Stopping and starting the Administration Server and Managed Servers Domain lifecycle sample scripts  As OIG domains use the WebLogic Kubernetes Operator, domain lifecyle operations are managed using the WebLogic Kubernetes Operator itself.
This document shows the basic operations for starting, stopping and scaling servers in the OIG domain.
For more detailed information refer to Domain Life Cycle in the WebLogic Kubernetes Operator documentation.</description>
    </item>
    
    <item>
      <title>a. Domain Lifecycle</title>
      <link>/fmw-kubernetes/ohs/manage-ohs-containers/domain-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/ohs/manage-ohs-containers/domain-lifecycle/</guid>
      <description>View existing OHS servers Starting/Scaling up OHS servers Stopping/Scaling down OHS servers  This document shows the basic operations for scaling servers in OHS containers.
View existing OHS servers The default OHS deployment starts one OHS server (assuming replicas: 1 in ohs.yaml).
To view the running OHS servers, run the following command:
$ kubectl get pods -n &amp;lt;namespace&amp;gt; For example:
$ kubectl get pods -n ohsns The output should look similar to the following:</description>
    </item>
    
    <item>
      <title>a. Patch an image</title>
      <link>/fmw-kubernetes/idm-products/oudsm/patch-and-upgrade/patch-an-oudsm-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oudsm/patch-and-upgrade/patch-an-oudsm-image/</guid>
      <description>Introduction In this section the Oracle Unified Directory Services Manager (OUDSM) deployment is updated with a new OUDSM container image.
Note: If you are not using Oracle Container Registry or your own container registry, then you must first load the new container image on all nodes in your Kubernetes cluster.
You can update the deployment with a new OUDSM container image using one of the following methods:
 Using a YAML file Using --set argument  Using a YAML file   Navigate to the $WORKDIR/kubernetes/helm directory:</description>
    </item>
    
    <item>
      <title>a. Post Install Tasks</title>
      <link>/fmw-kubernetes/idm-products/oig/post-install-config/set_oimfronendurl_using_mbeans/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/post-install-config/set_oimfronendurl_using_mbeans/</guid>
      <description>Follow these post install configuration steps.
 Create a Server Overrides File Set OIMFrontendURL using MBeans  Create a Server Overrides File   Navigate to the following directory:
cd $WORKDIR/kubernetes/create-oim-domain/domain-home-on-pv/output/weblogic-domains/governancedomain For OIG domains created with WDT:
$ cd $WORKDIR/kubernetes/create-oim-domain/domain-home-on-pv/ ``
  Create a setUserOverrides.sh with the following contents:
DERBY_FLAG=false JAVA_OPTIONS=&amp;quot;${JAVA_OPTIONS} -Djava.net.preferIPv4Stack=true&amp;quot; MEM_ARGS=&amp;quot;-Xms8192m -Xmx8192m&amp;quot;   Copy the setUserOverrides.sh file to the Administration Server pod:
$ chmod 755 setUserOverrides.sh $ kubectl cp setUserOverrides.</description>
    </item>
    
    <item>
      <title>a. Upgrade an operator release</title>
      <link>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/upgrade-an-operator-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/upgrade-an-operator-release/</guid>
      <description>These instructions apply to upgrading operators from 3.X.X to 4.X, or from within the 4.X release family as additional versions are released.
  On the master node, download the new WebLogic Kubernetes Operator source code from the operator github project:
$ mkdir &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-4.X.X $ cd &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-4.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v4.X.X For example:
$ mkdir /scratch/OAMK8S/weblogic-kubernetes-operator-4.X.X $ cd /scratch/OAMK8S/weblogic-kubernetes-operator-4.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v4.X.X This will create the directory &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-4.</description>
    </item>
    
    <item>
      <title>a. Upgrade an operator release</title>
      <link>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/upgrade-an-operator-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/upgrade-an-operator-release/</guid>
      <description>These instructions apply to upgrading operators from 3.X.X to 4.X, or from within the 4.x release family as additional versions are released.
  On the master node, download the new WebLogic Kubernetes Operator source code from the operator github project:
$ mkdir &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-4.X.X $ cd &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-4.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v4.X.X For example:
$ mkdir /scratch/OIGK8S/weblogic-kubernetes-operator-4.X.X $ cd /scratch/OIGK8S/weblogic-kubernetes-operator-4.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v4.X.X This will create the directory &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-4.</description>
    </item>
    
    <item>
      <title>a. Using an Ingress with NGINX (non-SSL)</title>
      <link>/fmw-kubernetes/idm-products/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s/</guid>
      <description>Setting up an ingress for NGINX for the OIG domain on Kubernetes (non-SSL) The instructions below explain how to set up NGINX as an ingress for the OIG domain with non-SSL termination.
Note: All the steps below should be performed on the master node.
  Install NGINX
a. Configure the repository
b. Create a namespace
c. Install NGINX using helm
d. Setup routing rules for the domain
  Create an ingress for the domain</description>
    </item>
    
    <item>
      <title>b) Logging and Visualization for Helm Chart oud-ds-rs Deployment</title>
      <link>/fmw-kubernetes/idm-products/oud/manage-oud-containers/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oud/manage-oud-containers/logging-and-visualization/</guid>
      <description>Introduction Install Elasticsearch and Kibana Create a Kubernetes secret Enable Logstash  Upgrade OUD deployment with ELK configuration Verify the pods Troubleshooting   Verify and access the Kibana console  Introduction This section describes how to install and configure logging and visualization for the oud-ds-rs Helm chart deployment.
The ELK stack consists of Elasticsearch, Logstash, and Kibana. Using ELK you can gain insights in real-time from the log data from your applications.</description>
    </item>
    
    <item>
      <title>b) Logging and Visualization for Helm Chart oudsm Deployment</title>
      <link>/fmw-kubernetes/idm-products/oudsm/manage-oudsm-containers/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oudsm/manage-oudsm-containers/logging-and-visualization/</guid>
      <description>Introduction This section describes how to install and configure logging and visualization for the oudsm Helm chart deployment.
The ELK stack consists of Elasticsearch, Logstash, and Kibana. Using ELK you can gain insights in real-time from the log data from your applications.
 Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.</description>
    </item>
    
    <item>
      <title>b. Create OAM domains using WDT models</title>
      <link>/fmw-kubernetes/idm-products/oam/create-oam-domains/create-oam-domains-using-wdt-models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/create-oam-domains/create-oam-domains-using-wdt-models/</guid>
      <description>Introduction
  Prerequisites
  Create OAM domains using WDT models
a. Prepare the persistent storage
b. Create Kubernetes secrets for the domain and RCU
c. Generate WDT models and the domain resource yaml file
d. Build the Domain Creation Image
e. Deploy the OAM domain resource
  Verify the results
a. Verify the domain, pods and services
b. Verify the domain
c. Verify the pods</description>
    </item>
    
    <item>
      <title>b. Create OIG domains using WDT Models</title>
      <link>/fmw-kubernetes/idm-products/oig/create-oig-domains/create-oig-domains-wdt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/create-oig-domains/create-oig-domains-wdt/</guid>
      <description>Introduction
  Prerequisites
  Create OIG domains using WDT models
a. Prepare the persistent storage
b. Create Kubernetes secrets for the domain and RCU
c. Generate WDT models and the domain resource yaml file
d. Build the Domain Creation Image
e. Deploy the OIG domain resource
  Verify the results
a. Verify the domain, pods and services
b. Verify the domain
c. Verify the pods</description>
    </item>
    
    <item>
      <title>b. Install and configure connectors</title>
      <link>/fmw-kubernetes/idm-products/oig/post-install-config/install_and_configure_connectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/post-install-config/install_and_configure_connectors/</guid>
      <description>Download the connector   Download the Connector you are interested in from Oracle Identity Manager Connector Downloads.
  Copy the connector zip file to a staging directory on the master node e.g. &amp;lt;workdir&amp;gt;/stage and unzip it:
$ cp $HOME/Downloads/&amp;lt;connector&amp;gt;.zip &amp;lt;workdir&amp;gt;/&amp;lt;stage&amp;gt;/ $ cd &amp;lt;workdir&amp;gt;/&amp;lt;stage&amp;gt; $ unzip &amp;lt;connector&amp;gt;.zip $ chmod -R 755 * For example:
$ cp $HOME/Downloads/Exchange-12.2.1.3.0.zip /scratch/OIGK8S/stage/ $ cd /scratch/OIGK8S/stage/ $ unzip exchange-12.2.1.3.0.zip $ chmod -R 755 *   Copy OIG connectors There are two options to copy OIG Connectors to your Kubernetes cluster:</description>
    </item>
    
    <item>
      <title>b. Modifying the OHS container</title>
      <link>/fmw-kubernetes/ohs/manage-ohs-containers/modfy-ohs-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/ohs/manage-ohs-containers/modfy-ohs-config/</guid>
      <description>This document shows how to modify the OHS configuration after the OHS container is deployed.
Modifying the deployed OHS container configuration can be achieved in the following ways:
a. Editing the configuration files in $MYOHSFILES/ohsConfig.
b. Running kubectl edit configmap.
Editing the configuration files in the $MYOHSFILES/ohsConfig To edit the configuration files:
  Edit the required files in the $MYOHSFILES/ohsConfig directories.
  Delete the configmaps for any files you have changed.</description>
    </item>
    
    <item>
      <title>b. Patch an image</title>
      <link>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/patch-an-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/patch-an-image/</guid>
      <description>Choose one of the following options to update your OAM kubernetes cluster to use the new image:
 Run the kubectl edit domain command Run the kubectl patch domain command  In all of the above cases, the WebLogic Kubernetes Operator will restart the Administration Server pod first and then perform a rolling restart on the OAM Managed Servers.
Note: If you are not using Oracle Container Registry or your own container registry, then you must first load the new container image on all nodes in your Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>b. Patch an image</title>
      <link>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/patch-an-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/patch-an-image/</guid>
      <description>Introduction The OIG domain patching script automatically performs the update of your OIG Kubernetes cluster with a new OIG container image.
Note: Before following the steps below, you must have upgraded to WebLogic Kubernetes Operator 4.X.X.
The script executes the following steps sequentially:
 Checks if the helper pod exists in the given namespace. If yes, then it deletes the helper pod. Brings up a new helper pod with the new image.</description>
    </item>
    
    <item>
      <title>b. Upgrade Elasticsearch and Kibana</title>
      <link>/fmw-kubernetes/idm-products/oudsm/patch-and-upgrade/upgrade-elk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oudsm/patch-and-upgrade/upgrade-elk/</guid>
      <description>This section shows how to upgrade Elasticsearch and Kibana.
To determine if this step is required for the version you are upgrading from, refer to the Release Notes.
Download the latest code repository Download the latest code repository as follows:
  Create a working directory to setup the source code.
$ mkdir &amp;lt;workdir&amp;gt; For example:
$ mkdir /scratch/OUDSMK8SJan25   Download the latest OUDSM deployment scripts from the OUDSM repository.</description>
    </item>
    
    <item>
      <title>b. Using an Ingress with NGINX (SSL)</title>
      <link>/fmw-kubernetes/idm-products/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s-ssl/</guid>
      <description>Setting up an ingress for NGINX for the OIG domain on Kubernetes The instructions below explain how to set up NGINX as an ingress for the OIG domain with SSL termination.
Note: All the steps below should be performed on the master node.
  Create a SSL certificate
a. Generate SSL certificate
b. Create a Kubernetes secret for SSL
  Install NGINX
a. Configure the repository
b. Create a namespace</description>
    </item>
    
    <item>
      <title>b. WLST Administration Operations</title>
      <link>/fmw-kubernetes/idm-products/oam/manage-oam-domains/wlst-admin-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/manage-oam-domains/wlst-admin-operations/</guid>
      <description>To use WLST to administer the OAM domain, use a helper pod in the same Kubernetes cluster as the OAM Domain.
  Check to see if the helper pod exists by running:
$ kubectl get pods -n &amp;lt;domain_namespace&amp;gt; | grep helper For example:
$ kubectl get pods -n oamns | grep helper The output should look similar to the following:
helper 1/1 Running 0 26h If the helper pod doesn&amp;rsquo;t exist then see Step 1 in Prepare your environment  to create it.</description>
    </item>
    
    <item>
      <title>b. WLST administration operations</title>
      <link>/fmw-kubernetes/idm-products/oig/manage-oig-domains/wlst-admin-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/manage-oig-domains/wlst-admin-operations/</guid>
      <description>Invoke WLST and access Administration Server To use WLST to administer the OIG domain, use a helper pod in the same Kubernetes cluster as the OIG Domain.
  Check to see if the helper pod exists by running:
$ kubectl get pods -n &amp;lt;domain_namespace&amp;gt; | grep helper For example:
$ kubectl get pods -n oigns | grep helper The output should look similar to the following:
helper 1/1 Running 0 26h If the helper pod doesn&amp;rsquo;t exist then see Step 1 in Prepare your environment  to create it.</description>
    </item>
    
    <item>
      <title>c) Monitoring an Oracle Unified Directory Instance</title>
      <link>/fmw-kubernetes/idm-products/oud/manage-oud-containers/monitoring-oud-instance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oud/manage-oud-containers/monitoring-oud-instance/</guid>
      <description>Introduction Install Prometheus and Grafana  Create a Kubernetes namespace Add Prometheus and Grafana Helm repositories Install the Prometheus operator View Prometheus and Grafana objects created Add the NodePort   Verify using Grafana GUI  Introduction After the Oracle Unified Directory instance (OUD) is set up you can monitor it using Prometheus and Grafana.
Install Prometheus and Grafana Create a Kubernetes namespace   Create a Kubernetes namespace to provide a scope for Prometheus and Grafana objects such as pods and services that you create in the environment.</description>
    </item>
    
    <item>
      <title>c) Monitoring an Oracle Unified Directory Services Manager Instance</title>
      <link>/fmw-kubernetes/idm-products/oudsm/manage-oudsm-containers/monitoring-oudsm-instance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oudsm/manage-oudsm-containers/monitoring-oudsm-instance/</guid>
      <description>Introduction Install Prometheus and Grafana  Create a Kubernetes namespace Add Prometheus and Grafana Helm repositories Install the Prometheus operator View Prometheus and Grafana Objects Created Add the NodePort   Verify Using Grafana GUI  Introduction After the Oracle Unified Directory Services Manager instance is set up you can monitor it using Prometheus and Grafana.
Install Prometheus and Grafana Create a Kubernetes namespace   Create a Kubernetes namespace to provide a scope for Prometheus and Grafana objects such as pods and services that you create in the environment.</description>
    </item>
    
    <item>
      <title>c. Delete the OHS container</title>
      <link>/fmw-kubernetes/ohs/manage-ohs-containers/delete-ohs-container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/ohs/manage-ohs-containers/delete-ohs-container/</guid>
      <description>The following commands show how to remove the OHS container, OHS nodeport service, configmaps, secrets, and namespace:
  Run the following command to delete the OHS nodeport service:
$ kubectl delete -f $MYOHSFILES/ohs_service.yaml   Run the following command to delete the OHS container:
$ kubectl delete -f $MYOHSFILES/ohs.yaml   Run the following commands to delete any configmaps you have created, for example:
$ kubectl delete cm -n ohsns ohs-config $ kubectl delete cm -n ohsns ohs-httpd $ kubectl delete cm -n ohsns ohs-htdocs $ kubectl delete cm -n ohsns ohs-myapp $ kubectl delete cm -n ohsns webgate-config $ kubectl delete cm -n ohsns webgate-wallet $ kubectl delete cm -n ohsns ohs-wallet   Run the following command to delete the secrets:</description>
    </item>
    
    <item>
      <title>c. Logging and Visualization</title>
      <link>/fmw-kubernetes/idm-products/oam/manage-oam-domains/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/manage-oam-domains/logging-and-visualization/</guid>
      <description>After the OAM domain is set up you can publish operator and WebLogic Server logs into Elasticsearch and interact with them in Kibana.
Install Elasticsearch stack and Kibana If you do not already have a centralized Elasticsearch (ELK) stack then you must configure this first. For details on how to configure the ELK stack, follow Installing Elasticsearch (ELK) Stack and Kibana
Create the logstash pod Variables used in this chapter In order to create the logstash pod, you must create several files.</description>
    </item>
    
    <item>
      <title>c. Runnning OIG utilities</title>
      <link>/fmw-kubernetes/idm-products/oig/manage-oig-domains/running-oig-utilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/manage-oig-domains/running-oig-utilities/</guid>
      <description>Run OIG utlities inside the OIG Kubernetes cluster.
Run utilities in an interactive bash shell   Access a bash shell inside the &amp;lt;domain_uid&amp;gt;-oim-server1 pod:
$ kubectl -n oigns exec -it &amp;lt;domain_uid&amp;gt;-oim-server1 -- bash For example:
$ kubectl -n oigns exec -it governancedomain-oim-server1 -- bash This will take you into a bash shell in the running &amp;lt;domain_uid&amp;gt;-oim-server1 pod:
[oracle@governancedomain-oim-server1 oracle]$   Navigate to the /u01/oracle/idm/server/bin directory and execute the utility as required.</description>
    </item>
    
    <item>
      <title>c. Upgrade Ingress</title>
      <link>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/upgrade-an-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/upgrade-an-ingress/</guid>
      <description>This section shows how to upgrade the ingress.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Download the latest code repository Download the latest code repository as follows:
  Create a working directory to setup the source code.
$ mkdir &amp;lt;workdir&amp;gt; For example:
$ mkdir /scratch/OAMK8Slatest   Download the latest OAM deployment scripts from the OAM repository.</description>
    </item>
    
    <item>
      <title>c. Upgrade Ingress</title>
      <link>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/upgrade-an-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/upgrade-an-ingress/</guid>
      <description>This section shows how to upgrade the ingress.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Upgrading the ingress To upgrade the existing ingress rules, follow the steps below:
  List the existing ingress:
$ helm list -n &amp;lt;domain_namespace&amp;gt; For example:
$ helm list -n oigns The output will look similar to the following:
NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION governancedomain-nginx oigns 1 &amp;lt;DATE&amp;gt; deployed ingress-per-domain-0.</description>
    </item>
    
    <item>
      <title>d. Kubernetes Horizontal Pod Autoscaler</title>
      <link>/fmw-kubernetes/idm-products/oud/manage-oud-containers/hpa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oud/manage-oud-containers/hpa/</guid>
      <description>Prerequisite configuration Deploy the Kubernetes Metrics Server  Troubleshooting   Deploy HPA Testing HPA Delete the HPA Other considerations  Kubernetes Horizontal Pod Autoscaler (HPA) allows automatic scaling (up and down) of the OUD servers. If load increases then extra OUD servers will be started as required. Similarly, if load decreases, OUD servers will be automatically shutdown.
For more information on HPA, see Horizontal Pod Autoscaling.
The instructions below show you how to configure and run an HPA to scale OUD servers, based on CPU utilization or memory resource metrics.</description>
    </item>
    
    <item>
      <title>d. Logging and visualization</title>
      <link>/fmw-kubernetes/idm-products/oig/manage-oig-domains/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/manage-oig-domains/logging-and-visualization/</guid>
      <description>After the OIG domain is set up you can publish operator and WebLogic Server logs into Elasticsearch and interact with them in Kibana.
Install Elasticsearch and Kibana If you do not already have a centralized Elasticsearch (ELK) stack then you must configure this first. For details on how to configure the ELK stack, follow Installing Elasticsearch (ELK) Stack and Kibana
Create the logstash pod Variables used in this chapter In order to create the logstash pod, you must create several files.</description>
    </item>
    
    <item>
      <title>d. Monitoring an OAM domain</title>
      <link>/fmw-kubernetes/idm-products/oam/manage-oam-domains/monitoring-oam-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/manage-oam-domains/monitoring-oam-domains/</guid>
      <description>After the OAM domain is set up you can monitor the OAM instance using Prometheus and Grafana.
Monitor the Oracle Access Management instance using Prometheus and Grafana Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle Access Management instance and monitor them using Prometheus and Grafana.
Set up monitoring Follow these steps to set up monitoring for an Oracle Access Management instance. For more details on WebLogic Monitoring Exporter, see here.</description>
    </item>
    
    <item>
      <title>d. Upgrade Elasticsearch and Kibana</title>
      <link>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/upgrade-elk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/patch-and-upgrade/upgrade-elk/</guid>
      <description>This section shows how to upgrade Elasticsearch and Kibana.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Undeploy Elasticsearch and Kibana From October 22 (22.4.1) onwards, OAM logs should be stored on a centralized Elasticsearch and Kibana stack.
Deployments prior to October 22 (22.4.1) used local deployments of Elasticsearch and Kibana.
If you are upgrading from July 22 (22.3.1) or earlier, to October 22 (22.</description>
    </item>
    
    <item>
      <title>d. Upgrade Elasticsearch and Kibana</title>
      <link>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/upgrade-elk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/patch-and-upgrade/upgrade-elk/</guid>
      <description>This section shows how to upgrade Elasticsearch and Kibana.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Download the latest code repository  Make sure you have downloaded the latest code as per Download the latest code repository.  Undeploy Elasticsearch and Kibana From October 22 (22.4.1) onwards, OIG logs should be stored on a centralized Elasticsearch and Kibana stack.</description>
    </item>
    
    <item>
      <title>e. Kubernetes Horizontal Pod Autoscaler</title>
      <link>/fmw-kubernetes/idm-products/oam/manage-oam-domains/hpa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/manage-oam-domains/hpa/</guid>
      <description>Prerequisite configuration Deploy the Kubernetes Metrics Server  Troubleshooting   Deploy HPA Testing HPA Delete the HPA Other considerations  Kubernetes Horizontal Pod Autoscaler (HPA) is supported from Weblogic Kubernetes Operator 4.0.X and later.
HPA allows automatic scaling (up and down) of the OAM Managed Servers. If load increases then extra OAM Managed Servers will be started as required, up to the value configuredManagedServerCount defined when the domain was created (see Prepare the create domain script).</description>
    </item>
    
    <item>
      <title>e. Monitoring an OIG domain</title>
      <link>/fmw-kubernetes/idm-products/oig/manage-oig-domains/monitoring-oim-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/manage-oig-domains/monitoring-oim-domains/</guid>
      <description>After the OIG domain is set up you can monitor the OIG instance using Prometheus and Grafana.
Monitor the Oracle Identity Management instance using Prometheus and Grafana Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle Identity Management instance and monitor them using Prometheus and Grafana.
Set up monitoring Follow these steps to set up monitoring for an Oracle Identity Management instance. For more details on WebLogic Monitoring Exporter, see here.</description>
    </item>
    
    <item>
      <title>f. Delete the OAM domain home</title>
      <link>/fmw-kubernetes/idm-products/oam/manage-oam-domains/delete-domain-home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oam/manage-oam-domains/delete-domain-home/</guid>
      <description>Sometimes in production, but most likely in testing environments, you might want to remove the domain home that is generated using the create-domain.sh script.
  Run the following command to delete the domain:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d &amp;lt;domain_uid&amp;gt; For example:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d accessdomain   Drop the RCU schemas as follows:
$ kubectl exec -it helper -n &amp;lt;domain_namespace&amp;gt; -- /bin/bash [oracle@helper ~]$ [oracle@helper ~]$ export CONNECTION_STRING=&amp;lt;db_host.</description>
    </item>
    
    <item>
      <title>f. Kubernetes Horizontal Pod Autoscaler</title>
      <link>/fmw-kubernetes/idm-products/oig/manage-oig-domains/hpa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/manage-oig-domains/hpa/</guid>
      <description>Prerequisite configuration Deploy the Kubernetes Metrics Server  Troubleshooting   Deploy HPA Testing HPA Delete the HPA Other considerations  Kubernetes Horizontal Pod Autoscaler (HPA) is supported from Weblogic Kubernetes Operator 4.0.X and later.
HPA allows automatic scaling (up and down) of the OIG Managed Servers. If load increases then extra OIG Managed Servers will be started as required, up to the value configuredManagedServerCount defined when the domain was created (see Prepare the create domain script).</description>
    </item>
    
    <item>
      <title>g. Delete the OIG domain home</title>
      <link>/fmw-kubernetes/idm-products/oig/manage-oig-domains/delete-domain-home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/idm-products/oig/manage-oig-domains/delete-domain-home/</guid>
      <description>Sometimes in production, but most likely in testing environments, you might want to remove the domain home that is generated using the create-domain.sh script.
  Run the following command to delete the domain:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d &amp;lt;domain_uid&amp;gt; For example:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d governancedomain   Drop the RCU schemas as follows:
$ kubectl exec -it helper -n &amp;lt;domain_namespace&amp;gt; -- /bin/bash [oracle@helper ~]$ [oracle@helper ~]$ export CONNECTION_STRING=&amp;lt;db_host.</description>
    </item>
    
  </channel>
</rss>