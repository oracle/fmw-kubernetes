<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle Fusion Middleware on Kubernetes</title>
    <link>/fmw-kubernetes/</link>
    <description>Recent content on Oracle Fusion Middleware on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2019 06:46:23 -0500</lastBuildDate>
    
	<atom:link href="/fmw-kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/soa-domains/release-notes/</link>
      <pubDate>Fri, 15 Mar 2019 11:25:28 -0400</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle SOA Suite on Kubernetes.
Recent changes    Date Version Introduces backward incompatibilities Change     October 3, 2020 20.3.3 no Certified Oracle WebLogic Kubernetes operator version 3.0.1. Kubernetes 1.14.8+, 1.15.7+, 1.1.6.0+, 1.17.0+, and 1.18.0+ support. Flannel is the only supported CNI in this release. SSL enabling for the Administration Server and Managed Servers is supported. Only Oracle SOA Suite 12.</description>
    </item>
    
    <item>
      <title>Deploy using JDeveloper</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/supportjdev/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/supportjdev/</guid>
      <description>Learn how to deploy Oracle SOA Suite and Oracle Service Bus composite applications from Oracle JDeveloper (running outside the Kubernetes network) to an Oracle SOA Suite instance in the WebLogic Kubernetes operator environment.
Use JDeveloper for development and test environments only. For a production environment, you should deploy using Application Control and WLST methods.
 Deploy Oracle SOA Suite and Oracle Service Bus composite applications to Oracle SOA Suite from JDeveloper To deploy Oracle SOA Suite and Oracle Service Bus composite applications from Oracle JDeveloper, the Administration Server must be configured to expose a T3 channel.</description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/soa-domains/appendix/soa-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/appendix/soa-cluster-sizing-info/</guid>
      <description>Oracle SOA cluster sizing recommendations    Oracle SOA Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Managed Server No of Servers : 2, No of CPU core(s) : 2, Memory : 16GB No of Servers : 2, No of CPU core(s) : 4, Memory : 16GB No of Servers : 3, No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Patch an image</title>
      <link>/fmw-kubernetes/soa-domains/patch_and_upgrade/patch-an-image/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/patch_and_upgrade/patch-an-image/</guid>
      <description>Oracle releases Oracle SOA Suite images regularly with latest bundle and recommended interim patches in My Oracle Support (MOS). However, if there is a need to create images with new bundle and interim patches, you can build these images using WebLogic Image Tool.
If you have access to the Oracle SOA Suite patches, you can patch an existing Oracle SOA Suite image with a bundle patch and interim patches. It is recommended to use the WebLogic Image Tool to patch the Oracle SOA Suite image.</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) to load balance Oracle SOA Suite domain clusters. You can configure Traefik for non-SSL and SSL termination access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/soa-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle SOA Suite domain deployment in a Kubernetes cluster (on-premise environments) with the Oracle WebLogic Server Kubernetes operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements Supported Linux kernel for deploying and running Oracle SOA Suite domains with the operator is Oracle Linux 7 UL6+ and Red Hat Enterprise Linux 7 (UL3+).</description>
    </item>
    
    <item>
      <title>Configure SSL certificates</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configuring-custom-ssl-certificates/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configuring-custom-ssl-certificates/</guid>
      <description>Secure Socket Layer (SSL) provides a secured communication for data sent over unsecured networks. In an SSL termination scenario, you can configure SSL between the client browser and the load balancer in your Oracle SOA Suite instance to ensure that applications are accessed securely. In an SSL end-to-end scenario, an Oracle SOA Suite domain is configured to use a self-signed SSL certificate that was generated during domain creation. Clients will typically receive a message indicating that the signing CA for the certificate is unknown and not trusted.</description>
    </item>
    
    <item>
      <title>Deploy using Maven and Ant</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/deploy-using-maven-ant/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/deploying-composites/deploy-using-maven-ant/</guid>
      <description>Learn how to deploy Oracle SOA Suite and Oracle Service Bus composite applications using the Maven and Ant based approach in an Oracle SOA Suite in WebLogic Kubernetes operator environment.
Before deploying composite applications, we need to create a Kubernetes pod in the same cluster where the Oracle SOA Suite domain is running, so that composite applications can be deployed using the internal Kubernetes Service for the Administration Server URL.</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle SOA Suite domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
See the official installation document for prerequisites.
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Upgrade an operator release</title>
      <link>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-operator-release/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-operator-release/</guid>
      <description>These instructions apply to upgrading operators within the 3.x release family as additional versions are released.
To upgrade the Kubernetes operator, use the helm upgrade command. When upgrading the operator, the helm upgrade command requires that you supply a new Helm chart and image. For example:
$ helm upgrade \ --reuse-values \ --set image=oracle/weblogic-kubernetes-operator:3.0.1 \ --namespace weblogic-operator-namespace \ --wait \ weblogic-operator \ kubernetes/charts/weblogic-operator </description>
    </item>
    
    <item>
      <title>Monitor a domain and publish logs</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/monitoring-soa-domains/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/monitoring-soa-domains/</guid>
      <description>After the Oracle SOA Suite domain is set up, you can:
 Monitor the Oracle SOA Suite instance using Prometheus and Grafana Publish WebLogic Server logs into Elasticsearch  Monitor the Oracle SOA Suite instance using Prometheus and Grafana Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle SOA Suite instance and monitor them using Prometheus and Grafana.
Prerequisite: Before setting up monitoring, make sure that Prometheus and Grafana are deployed on the Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/soa-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/patch_and_upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle SOA Suite domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Voyager</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/voyager/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/voyager/</guid>
      <description>Voyager/HAProxy is a popular ingress-based load balancer for production environments. This section provides information about how to install and configure Voyager/HAProxy to load balance Oracle SOA Suite domain clusters. You can configure Voyager for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up Voyager as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Apache webtier</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/apache/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/configure-load-balancer/apache/</guid>
      <description>This section provides information about how to install and configure Apache webtier to load balance Oracle SOA Suite domain clusters. You can configure Apache webtier for non-SSL and SSL termination access of the application URL.
Follow these steps to set up Apache webtier as a load balancer for an Oracle SOA Suite domain in a Kubernetes cluster:
 Build the Apache webtier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache webtier Helm chart Verify domain application URL access Uninstall Apache webtier  Build the Apache webtier image Refer to the sample, to build the Apache webtier Docker image.</description>
    </item>
    
    <item>
      <title>Expose the T3/T3S protocol</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/enablingt3/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/enablingt3/</guid>
      <description>Oracle strongly recommends that you do not expose non-HTTPS traffic (T3/T3s/LDAP/IIOP/IIOPs) outside of the external firewall. You can control this access using a combination of network channels and firewalls.
 You can create T3/T3S channels and the corresponding Kubernetes service to expose the T3/T3S protocol for the Administration Server and Managed Servers in an Oracle SOA Suite domain.
The WebLogic Kubernetes operator provides an option to expose a T3 channel for the Administration Server using the exposeAdminT3Channel setting during domain creation, then the matching T3 service can be used to connect.</description>
    </item>
    
    <item>
      <title>Configure Automatic Service Migration</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/jms-asm-migration/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/jms-asm-migration/</guid>
      <description>Singleton services offer one of the highest qualities of service (QOS) but are very susceptible to single point of failure. To address this issue, WebLogic Server offers a solution called migration. The process of moving the entire server instance from one physical machine to another upon failure is called Whole Server Migration (WSM). On the other hand, moving only the affected subsystem services from one server instance to another running server instance is called Service Migration.</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/soa-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle SOA Suite domain setup.
Remove the domain   Remove the domain&amp;rsquo;s ingress (for example, Traefik ingress) using Helm:
$ helm uninstall soa-domain-ingress -n sample-domain1-ns For example:
$ helm uninstall soainfra-traefik -n soans   Remove the domain resources by using the sample delete-weblogic-domain-resources.sh script present at ${WORKDIR}/weblogic-kubernetes-operator/kubernetes/samples/scripts/delete-domain:
$ cd ${WORKDIR}/weblogic-kubernetes-operator/kubernetes/samples/scripts/delete-domain $ ./delete-weblogic-domain-resources.sh -d sample-domain1 For example:
$ cd ${WORKDIR}/weblogic-kubernetes-operator/kubernetes/samples/scripts/delete-domain $ ./delete-weblogic-domain-resources.sh -d soans   Use kubectl to confirm that the server pods and domain resource are deleted:</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/fmw-kubernetes/soa-domains/faq/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/faq/</guid>
      <description>Overriding tuning parameters is not supported using configuration overrides The Oracle WebLogic Server Kubernetes operator enables you to override some of the domain configuration using configuration overrides (also called situational configuration). See supported overrides. Overriding the tuning parameters such as MaxMessageSize and PAYLOAD, for Oracle SOA Suite domains is not supported using the configuration overrides feature. However, you can override them using the following steps:
  Specify the new value using the environment variable K8S_REFCONF_OVERRIDES in serverPod.</description>
    </item>
    
    <item>
      <title>Persist adapter customizations</title>
      <link>/fmw-kubernetes/soa-domains/adminguide/persisting-soa-adapters-customizations/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/soa-domains/adminguide/persisting-soa-adapters-customizations/</guid>
      <description>The lifetime for any customization done in a file on a server pod is up to the lifetime of that pod. The changes are not persisted once the pod goes down or is restarted.
For example, the following configuration updates DbAdapter.rar to create a new connection instance and creates data source CoffeeShop on the Administration Console for the same with jdbc/CoffeeShopDS.
File location: /u01/oracle/soa/soa/connectors/DbAdapter.rar
&amp;lt;connection-instance&amp;gt; &amp;lt;jndi-name&amp;gt;eis/DB/CoffeeShop&amp;lt;/jndi-name&amp;gt; &amp;lt;connection-properties&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;XADataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;jdbc/CoffeeShopDS&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;DataSourceName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;PlatformClassName&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;org.</description>
    </item>
    
    <item>
      <title>a. Using Traefik Loadbalancer</title>
      <link>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/loadbalancer-traefik-setup-for-wcsites-domain-setup-on-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/loadbalancer-traefik-setup-for-wcsites-domain-setup-on-k8s/</guid>
      <description>Setting Up Loadbalancer Traefik for the WebCenter Sites Domain on K8S The Oracle WebLogic Server Kubernetes Operator supports three load balancers: Traefik, Voyager, and Apache. Follow these steps to set up Traefik as a loadbalancer for the WebCenter Sites domain:
 Install the Traefik Load Balancer Configure Traefik to Manage Ingresses Create an Ingress for the Domain Verify that You can Access the Domain URL  Install the Traefik Load Balancer   Use helm to install the Traefik load balancer.</description>
    </item>
    
    <item>
      <title>b. Using Voyager Loadbalancer</title>
      <link>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/loadbalancer-voyager-setup-for-wcsites-domain-setup-on-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/loadbalancer-voyager-setup-for-wcsites-domain-setup-on-k8s/</guid>
      <description>Setting Up Loadbalancer Voyager for the WebCenter Sites Domain on K8S The Oracle WebLogic Server Kubernetes Operator supports three load balancers: Traefik, Voyager, and Apache. Follow these steps to set up Voyager as a loadbalancer for the WebCenter Sites domain:
 Install the Voyager Load Balancer Configure Voyager to Manage Ingresses Verify that You can Access the Domain URL  Install the Voyager Load Balancer See the official installation document and follow step 1 and 2 here.</description>
    </item>
    
    <item>
      <title>c. ELK Integration for Logs</title>
      <link>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/elasticsearch-integration-with-wls-operator-and-wls-server-logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/elasticsearch-integration-with-wls-operator-and-wls-server-logs/</guid>
      <description>1. Integrate Elasticsearch to WebLogic Kubernetes Operator For reference information, see Elasticsearch integration for the WebLogic Kubernetes Operator.
To enable elasticsearch integration, you must edit file kubernetes/charts/weblogic-operator/values.yaml before deploying the WebLogic Kubernetes Operator.
# elkIntegrationEnabled specifies whether or not ELK integration is enabled. elkIntegrationEnabled: true # logStashImage specifies the docker image containing logstash. # This parameter is ignored if &#39;elkIntegrationEnabled&#39; is false. logStashImage: &amp;quot;logstash:6.6.0&amp;quot; # elasticSearchHost specifies the hostname of where Elasticsearch is running.</description>
    </item>
    
    <item>
      <title>d. Publish logs to Elasticsearch</title>
      <link>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/weblogic-logging-exporter-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/weblogic-logging-exporter-setup/</guid>
      <description>The WebLogic Logging Exporter adds a log event handler to WebLogic Server. WebLogic Server logs can be pushed to Elasticsearch in Kubernetes directly by using the Elasticsearch REST API. For more details, see to the WebLogic Logging Exporter project.
This sample shows you how to publish WebLogic Server logs to Elasticsearch and view them in Kibana. For publishing operator logs, see this sample.
Prerequisites This document assumes that you have already set up Elasticsearch and Kibana for logs collection.</description>
    </item>
    
    <item>
      <title>e. Monitor a WebCenter Sites domain</title>
      <link>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/weblogic-monitoring-exporter-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/manage-wcsites-domains/weblogic-monitoring-exporter-setup/</guid>
      <description>You can monitor a WebCenter Sites domain using Prometheus and Grafana by exporting the metrics from the domain instance using the WebLogic Monitoring Exporter. This sample shows you how to set up the WebLogic Monitoring Exporter to push the data to Prometheus.
Prerequisites This document assumes that the Prometheus Operator is deployed on the Kubernetes cluster. If it is not already deployed, follow the steps below for deploying the Prometheus Operator.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/wcsites-domains/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/wcsites-domains/release-notes/</guid>
      <description>Recent changes    Date Version Introduces backward incompatibilities Change     2020-03-18 2.4.0 No Starting with Oracle WebCenter Sites 12.2.1.4.0 support with WebLogic Kubernetes Operator 2.4.0    </description>
    </item>
    
  </channel>
</rss>