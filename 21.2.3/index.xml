<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle Fusion Middleware on Kubernetes</title>
    <link>/fmw-kubernetes/21.2.3/</link>
    <description>Recent content on Oracle Fusion Middleware on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2019 06:46:23 -0500</lastBuildDate>
    
	<atom:link href="/fmw-kubernetes/21.2.3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/appendix/wcc-cluster-sizing-info/</link>
      <pubDate>Mon, 01 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/appendix/wcc-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Content cluster sizing recommendations    Oracle WCC Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Number of Managed Servers 2 3 5   Configurations per Managed Server No of CPU core(s) : 2, Memory : 16GB No of CPU core(s) : 4, Memory : 16GB No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/wcp-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/wcp-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Portal cluster sizing recommendations    WebCenter Portal Normal Usage Moderate Usage High Usage     Admin Server No of CPU(s) : 1, Memory : 4GB No of CPU(s) : 1, Memory : 4GB No of CPU(s) : 1, Memory : 4GB   Number of Managed Server No of Servers : 2 No of Servers : 2 No of Servers : 3   Configurations per Managed Server No of CPU(s) : 2, Memory : 16GB No of CPU(s) : 4, Memory : 16GB No of CPU(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/traefik/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) and configure it for non-SSL, SSL termination, and end-to-end SSL access of the application URL. Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
  Non-SSL and SSL termination
 Install the Traefik (ingress-based) load balancer Configure Traefik to manage ingresses Create an Ingress for the domain Verify domain application URL access Uninstall the Traefik ingress    End-to-end SSL configuration</description>
    </item>
    
    <item>
      <title>Patch an image</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/patch_and_upgrade/patch-an-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/patch_and_upgrade/patch-an-image/</guid>
      <description>Oracle aims to release Oracle WebCenter Content images regularly with latest bundle and recommended interim patches in My Oracle Support (MOS). However, if there is a need to create images with new bundle and interim patches, you can build these images using WebLogic Image Tool.
If you have access to the Oracle WebCenter Content patches, you can patch an existing Oracle WebCenter Content image with a bundle patch and interim patches.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/release-notes/</guid>
      <description>Review the latest changes for Oracle WebCenter Content on Kubernetes.
Recent changes    Date Version Introduces backward incompatibilities Change     June 16, 2021 21.2.3 no Supports Oracle WebCenter Content 12.2.1.4 domains deployment using April 2021 PSU and known bug fixes. Oracle WebCenter Content 12.2.1.4 container image for this release can be downloaded from My Oracle Support (MOS patch 32822360).   February 28, 2021 21.1.2 no Certified Oracle WebLogic Kubernetes operator version 3.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/release-notes/</guid>
      <description>Recent changes    Date Version Change     June 30, 2021 21.2.3 Only Oracle Portal 12.2.1.4 is supported and certified with the WebLogic Kubernetes operator version 3.1.1.    </description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) to load balance Oracle WebCenter Content domain clusters. You can configure Traefik for non-SSL, SSL termination and end-to-end SSL access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Content	domain in a Kubernetes cluster:
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Quick start deployment guide</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/appendix/quickstart-deployment-guide/</link>
      <pubDate>Mon, 01 Feb 2021 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/appendix/quickstart-deployment-guide/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Content domain deployment in a Kubernetes cluster (on-premise environments) with the Oracle WebLogic Server Kubernetes operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements Supported Linux kernel for deploying and running Oracle WebCenter Content domain with the operator is Oracle Linux 7 (UL6+) and Red Hat Enterprise Linux 7 (UL3+ only with standalone Kubernetes).</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Tue, 22 Dec 2020 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle WebCenter Content domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Content domain in a Kubernetes cluster:
See the official installation document for prerequisites.
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Portal domain deployment in a Kubernetes cluster (on-premise environments) with the WebLogic Kubernetes Operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements The Linux kernel supported for deploying and running Oracle WebCenter Portal domains with the operator is Oracle Linux 7 (UL6+) and Red Hat Enterprise Linux 7 (UL3+ only with standalone Kubernetes).</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/nginx/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install the ingress-based NGINX load balancer and configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL. Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
See the official installation document for prerequisites.
  Non-SSL and SSL termination
 Install the NGINX load balancer Configure NGINX to manage ingresses Verify non-SSL and SSL termination access    End-to-end SSL configuration</description>
    </item>
    
    <item>
      <title>Monitor an Oracle WebCenter Content domain</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/weblogic-monitoring-exporter-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/weblogic-monitoring-exporter-setup/</guid>
      <description>You can monitor a WebCenter Content domain using Prometheus and Grafana by exporting the metrics from the domain instance using the WebLogic Monitoring Exporter. This sample shows you how to set up the WebLogic Monitoring Exporter to push the data to Prometheus.
Prerequisites This document assumes that the Prometheus Operator is deployed on the Kubernetes cluster. If it is not already deployed, follow the steps below for deploying the Prometheus Operator.</description>
    </item>
    
    <item>
      <title>Upgrade an operator release</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/patch_and_upgrade/upgrade-operator-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/patch_and_upgrade/upgrade-operator-release/</guid>
      <description>These instructions apply to upgrading operators within the 3.x release family as additional versions are released.
To upgrade the Kubernetes operator, use the helm upgrade command. Make sure that the weblogic-kubernetes-operator repository on your local machine is at the operator release to which you are upgrading. When upgrading the operator, the helm upgrade command requires that you supply a new Helm chart and image. For example:
$ helm upgrade \ --reuse-values \ --set image=oracle/weblogic-kubernetes-operator:3.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Mon, 01 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Elasticsearch integration for logs</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/elasticsearch-integration/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/elasticsearch-integration/</guid>
      <description>1. Integrate Elasticsearch to WebLogic Kubernetes Operator For reference information, see Elasticsearch integration for the WebLogic Kubernetes Operator.
To enable elasticsearch integration, you must edit file kubernetes/charts/weblogic-operator/values.yaml before deploying the WebLogic Kubernetes Operator.
# elkIntegrationEnabled specifies whether or not ELK integration is enabled. elkIntegrationEnabled: true # logStashImage specifies the docker image containing logstash. # This parameter is ignored if &#39;elkIntegrationEnabled&#39; is false. logStashImage: &amp;quot;logstash:6.6.0&amp;quot; # elasticSearchHost specifies the hostname of where Elasticsearch is running.</description>
    </item>
    
    <item>
      <title>Voyager</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/voyager/</link>
      <pubDate>Sat, 15 Feb 2020 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/voyager/</guid>
      <description>Voyager/HAProxy is a popular ingress-based load balancer for production environments. This section provides information about how to install and configure Voyager/HAProxy to load balance Oracle WebCenter Content domain clusters. You can configure Voyager for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up Voyager as a load balancer for an Oracle WebCenter Content domain in a Kubernetes cluster:
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Voyager</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/voyager/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/voyager/</guid>
      <description>Voyager/HAProxy is a popular ingress-based load balancer for production environments. You can install and configure Voyager/HAProxy to load balance Oracle WebCenter Portal domain clusters and configure it for non-SSL, SSL termination, and end-to-end SSL access of the application URL. Follow these steps to set up Voyager as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
  Non-SSL and SSL termination
 Install the Voyager load balancer Configure Voyager to manage ingresses Verify non-SSL and SSL access    End-to-end SSL configuration</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/patch_and_upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/patch_and_upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle WebCenter Content domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/weblogic-logging-exporter-setup/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/weblogic-logging-exporter-setup/</guid>
      <description>The WebLogic Logging Exporter adds a log event handler to WebLogic Server. WebLogic Server logs can be pushed to Elasticsearch in Kubernetes directly by using the Elasticsearch REST API. For more details, see to the WebLogic Logging Exporter project.
This sample shows you how to publish WebLogic Server logs to Elasticsearch and view them in Kibana. For publishing operator logs, see this sample.
Prerequisites This document assumes that you have already set up Elasticsearch and Kibana for logs collection.</description>
    </item>
    
    <item>
      <title>Apache webtier</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/apachewebtier/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/apachewebtier/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install Apache webtier and configure it for non-SSL and SSL termination access of the application URL. Follow these steps to set up Apache webtier as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
 Build the Apache webtier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache webtier Helm chart Verify domain application URL access Uninstall Apache webtier  Build the Apache webtier image To build the Apache webtier Docker image, refer to the sample.</description>
    </item>
    
    <item>
      <title>Additional Configuration</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/additional-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/appendix/additional-configuration/</guid>
      <description>Creating a Connection to Oracle WebCenter Content Server To enable content integration within Oracle WebCenter Portal create a connection to Oracle WebCenter Content Server using JAX-WS. Follow the steps in the documentation link to create the connection.
 Note: If the Oracle WebCenter Content Server is configured with SSL, before creating the connection, the SSL certificate should be imported into any location under mount path of domain persistent volume to avoid loss of certificate due pod restart.</description>
    </item>
    
    <item>
      <title>Apache webtier</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/apache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/configure-load-balancer/apache/</guid>
      <description>This section provides information about how to install and configure Apache webtier to load balance Oracle WebCenter Content domain clusters. You can configure Apache webtier for non-SSL and SSL termination access of the application URL.
Follow these steps to set up Apache webtier as a load balancer for an Oracle WebCenter Content domain in a Kubernetes cluster:
 Build the Apache webtier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache webtier Helm chart Verify domain application URL access Uninstall Apache webtier  Build the Apache webtier image Refer to the sample, to build the Apache webtier Docker image.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch Using Fluentd</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/logging-fluentd-setup/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/adminguide/logging-fluentd-setup/</guid>
      <description>Introduction This page describes to how to configure a WebLogic domain to use Fluentd to send log information to Elasticsearch. Here’s the general mechanism for how this works:
 fluentd runs as a separate container in the Administration Server and Managed Server pods The log files reside on a volume that is shared between the weblogic-server and fluentd containers fluentd tails the domain logs files and exports them to Elasticsearch A ConfigMap contains the filter and format rules for exporting log records.</description>
    </item>
    
    <item>
      <title>Uninstall an Oracle WebCenter Portal domain</title>
      <link>/fmw-kubernetes/21.2.3/wcportal-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wcportal-domains/cleanup-domain-setup/</guid>
      <description>To clean up the Oracle WebCenter Portal domain setup, follow the steps below.
Delete the Generated Domain Home To remove a domain home that you generated by running the create-domain.sh script in your production or testing environment, use the delete-domain-job.yaml file located at, &amp;lt;$WORKDIR&amp;gt;/weblogic-kubernetes-operator/kubernetes/samples/scripts/create-wcp-domain/domain-home-on-pv/output/weblogic-domains/wcp-domain&amp;gt; directory.
$ kubectl create -f delete-domain-job.yaml Clean Up the create-domain-job script After Execution Failure To clean up the create-domain-job script:
  Get the create domain job and configmaps:</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/21.2.3/wccontent-domains/cleanup-domain-setup/</link>
      <pubDate>Mon, 15 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/21.2.3/wccontent-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle WebCenter Content domain setup.
Stop all Administration and Managed server pods First stop the all pods related to a domain. This can be done by patching domain &amp;ldquo;serverStartPolicy&amp;rdquo; to &amp;ldquo;NEVER&amp;rdquo;. Here is the sample command for the same.
$ kubectl patch domain wcc-domain-name -n wcc-namespace --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; For example:
kubectl patch domain wccinfra -n wccns --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; Remove the domain   Remove the domain&amp;rsquo;s ingress (for example, Traefik ingress) using Helm:</description>
    </item>
    
  </channel>
</rss>